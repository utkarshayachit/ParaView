<ServerManagerConfiguration>
  <ProxyGroup name="camera">
    <CameraProxy name="Camera" class="vtkCamera"
      processes="client|dataserver|renderserver" >
      <DoubleVectorProperty
        name="CameraPositionInfo"
        command="GetPosition"
        number_of_elements="3"
        information_only="1"
        default_values="0 0 1">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="CameraPosition"
        command="SetPosition"
        number_of_elements="3"
        information_property="CameraPositionInfo"
        immediate_update="1"
        default_values="0 0 1">
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="CameraFocalPointInfo"
        command="GetFocalPoint"
        number_of_elements="3"
        information_only="1"
        default_values="0 0 0">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="CameraFocalPoint"
        command="SetFocalPoint"
        number_of_elements="3"
        information_property="CameraFocalPointInfo"
        immediate_update="1"
        default_values="0 0 0">
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="CameraViewUpInfo"
        command="GetViewUp"
        number_of_elements="3"
        information_only="1"
        default_values="0 1 0">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="CameraViewUp"
        command="SetViewUp"
        number_of_elements="3"
        information_property="CameraViewUpInfo"
        immediate_update="1"
        default_values="0 1 0">
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="CameraViewAngleInfo"
        command="GetViewAngle"
        information_only="1">
        <SimpleDoubleInformationHelper />
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="CameraViewAngle"
        command="SetViewAngle"
        information_property="CameraViewAngleInfo"
        number_of_elements="1"
        immediate_update="1"
        default_values="30">
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="CameraClippingRangeInfo"
        command="GetClippingRange"
        number_of_elements="2"
        information_only="1"
        default_values="0.01 1000.01">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="CameraClippingRange"
        command="SetClippingRange"
        number_of_elements="2"
        information_property="CameraClippingRangeInfo"
        immediate_update="1"
        default_values="0.01 1000.01">
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="CameraParallelScale"
        command="SetParallelScale"
        information_property="CameraParallelScaleInfo"
        number_of_elements="1"
        default_values="1.0">
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="CameraParallelScaleInfo"
        command="GetParallelScale"
        number_of_elements="1"
        information_only="1"
        default_values="1.0" >
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>

      <IntVectorProperty
        name="CameraParallelProjection"
        command="SetParallelProjection"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <DoubleVectorProperty
        name="EyeAngle"
        command="SetEyeAngle"
        number_of_elements="1"
        default_values="2.0">
        <DoubleRangeDomain name="range" min="0" />
      </DoubleVectorProperty>
    </CameraProxy> <!-- end of Camera Proxy -->
  </ProxyGroup>

  <ProxyGroup name="mappers">
    <Proxy name="MapperBase" class="not-used">
      <Documentation>
        Defines interface defined by vtkMapper. Don't instantiate directly.
      </Documentation>

      <ProxyProperty name="LookupTable" command="SetLookupTable">
        <ProxyGroupDomain name="groups">
          <Group name="lookup_tables"/>
        </ProxyGroupDomain>
      </ProxyProperty>

      <IntVectorProperty name="ScalarVisibility"
        command="SetScalarVisibility"
        number_of_elements="1"
        default_values="1"
        animateable="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty name="MapScalars"
        command="SetColorMode"
        number_of_elements="1"
        default_values="1"
        animateable="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          When set to true, LookupTable will always be used for scalar mapping
          even when scalars are unsigned chars. Otherwise, when upto 4 component
          unsigned chars are present, they will be directly used as colors.
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty name="ScalarRange"
        command="SetScalarRange"
        number_of_elements="2"
        default_values="0 1"
        animateable="0"/>

      <IntVectorProperty name="ImmediateModeRendering"
        command="SetImmediateModeRendering"
        number_of_elements="1"
        is_internal="1"
        default_values="0"
        animateable="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty name="InterpolateScalarsBeforeMapping"
        command="SetInterpolateScalarsBeforeMapping"
        number_of_elements="1"
        default_values="1"
        animateable="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty name="UseLookupTableScalarRange"
        command="SetUseLookupTableScalarRange"
        number_of_elements="1"
        default_values="0"
        animateable="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty name="ScalarMode"
        command="SetScalarMode"
        default_values="0"
        number_of_elements="1"
        animateable="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Default"/>
          <Entry value="1" text="UsePointData"/>
          <Entry value="2" text="UseCellData"/>
          <Entry value="3" text="UsePointFieldData"/>
          <Entry value="4" text="UseCellFieldData"/>
        </EnumerationDomain>
      </IntVectorProperty>

      <StringVectorProperty name="ColorArray"
        command="SelectColorArray"
        number_of_elements="1"
        animateable="0">
        <ArrayListDomain name="array_list" attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>

      <ProxyProperty name="ClippingPlanes"
                     command="AddClippingPlane"
                     repeat_command="1"
                     repeatable="1">
         <ProxyGroupDomain name="groups">
          <Group name="implicit_functions"/>
         </ProxyGroupDomain>
      </ProxyProperty>

      <IntVectorProperty name="StaticMode"
        command="SetStatic"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
    </Proxy>

    <SourceProxy name="PolyDataMapper" class="vtkPolyDataMapper"
      base_proxygroup="mappers" base_proxyname="MapperBase">
      <InputProperty name="Input" command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>

      <IntVectorProperty name="NumberOfSubPieces"
        command="SetNumberOfSubPieces"
        number_of_elements="1"
        default_values="1">
        <IntRangeDomain name="range" min="1"/>
      </IntVectorProperty>
    </SourceProxy>

    <SourceProxy name="ProjectedTetrahedraMapper"
      class="vtkProjectedTetrahedraMapper"
      processes="client|renderserver|dataserver">
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <!--
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        -->
        <DataTypeDomain name="input_type">
          <DataType value="vtkUnstructuredGrid"/>
        </DataTypeDomain>
      </InputProperty>
      <IntVectorProperty
        name="ScalarMode"
        command="SetScalarMode"
        default_values="3"
        number_of_elements="1"
        animateable="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Default"/>
          <Entry value="1" text="PointData"/>
          <Entry value="2" text="CellData"/>
          <Entry value="3" text="PointFieldData"/>
          <Entry value="4" text="CellFieldData"/>
        </EnumerationDomain>
      </IntVectorProperty>
      <StringVectorProperty
        name="SelectScalarArray"
        command="SelectScalarArray"
        number_of_elements="1"
        animateable="0">
        <ArrayListDomain name="array_list" attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
    </SourceProxy>

    <SourceProxy name="HAVSVolumeMapper"
      class="vtkHAVSVolumeMapper"
      processes="client|renderserver|dataserver">
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <!--
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        -->
        <DataTypeDomain name="input_type">
          <DataType value="vtkUnstructuredGrid"/>
        </DataTypeDomain>
      </InputProperty>
      <IntVectorProperty
        name="ScalarMode"
        command="SetScalarMode"
        default_values="3"
        number_of_elements="1"
        animateable="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Default"/>
          <Entry value="1" text="PointData"/>
          <Entry value="2" text="CellData"/>
          <Entry value="3" text="PointFieldData"/>
          <Entry value="4" text="CellFieldData"/>
        </EnumerationDomain>
      </IntVectorProperty>
      <StringVectorProperty
        name="SelectScalarArray"
        command="SelectScalarArray"
        number_of_elements="1"
        animateable="0">
        <ArrayListDomain name="array_list" attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
    </SourceProxy>

    <Proxy name="DummyVolumeMapper">
      <IntVectorProperty
        name="ScalarMode"
        command="SetScalarMode"
        default_values="3"
        number_of_elements="1"
        animateable="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Default"/>
          <Entry value="1" text="PointData"/>
          <Entry value="2" text="CellData"/>
          <Entry value="3" text="PointFieldData"/>
          <Entry value="4" text="CellFieldData"/>
        </EnumerationDomain>
      </IntVectorProperty>
      <StringVectorProperty
        name="SelectScalarArray"
        command="SelectScalarArray"
        number_of_elements="1"
        animateable="0">
        <ArrayListDomain name="array_list" attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <ProxyProperty name="RayCastFunction" command="SetRayCastFunction">
        <ProxyGroupDomain name="groups">
          <Group name="ugrid_raycast_functions"/>
        </ProxyGroupDomain>
      </ProxyProperty>
    </Proxy>

    <SourceProxy name="UnstructuredGridVolumeRayCastMapper"
      class="vtkUnstructuredGridVolumeRayCastMapper"
      processes="client|renderserver|dataserver">
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <!--
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        -->
        <DataTypeDomain name="input_type">
          <DataType value="vtkUnstructuredGrid"/>
        </DataTypeDomain>
      </InputProperty>

      <IntVectorProperty
        name="ScalarMode"
        command="SetScalarMode"
        default_values="3"
        number_of_elements="1"
        animateable="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Default"/>
          <Entry value="1" text="PointData"/>
          <Entry value="2" text="CellData"/>
          <Entry value="3" text="PointFieldData"/>
          <Entry value="4" text="CellFieldData"/>
        </EnumerationDomain>
      </IntVectorProperty>

      <StringVectorProperty
        name="SelectScalarArray"
        command="SelectScalarArray"
        number_of_elements="1"
        animateable="0">
        <ArrayListDomain name="array_list" attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>

      <ProxyProperty name="RayCastFunction" command="SetRayCastFunction">
        <ProxyGroupDomain name="groups">
          <Group name="ugrid_raycast_functions"/>
        </ProxyGroupDomain>
      </ProxyProperty>
    </SourceProxy>

    <SourceProxy name="UnstructuredGridVolumeZSweepMapper"
      class="vtkUnstructuredGridVolumeZSweepMapper"
      processes="client|renderserver|dataserver">
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <!--
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        -->
        <DataTypeDomain name="input_type">
          <DataType value="vtkUnstructuredGrid"/>
        </DataTypeDomain>
      </InputProperty>
      <IntVectorProperty
        name="ScalarMode"
        command="SetScalarMode"
        default_values="3"
        number_of_elements="1"
        animateable="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Default"/>
          <Entry value="1" text="PointData"/>
          <Entry value="2" text="CellData"/>
          <Entry value="3" text="PointFieldData"/>
          <Entry value="4" text="CellFieldData"/>
        </EnumerationDomain>
      </IntVectorProperty>
      <StringVectorProperty
        name="SelectScalarArray"
        command="SelectScalarArray"
        number_of_elements="1"
        animateable="0">
        <ArrayListDomain name="array_list" attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
    </SourceProxy>

    <SourceProxy name="GPUVolumeRayCastMapper"
      class="vtkGPUVolumeRayCastMapper"
      processes="client|renderserver|dataserver">
      <Documentation>
        This is the proxy for GPU based volume rendering.
      </Documentation>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <DataTypeDomain name="input_type">
          <DataType value="vtkImageData"/>
        </DataTypeDomain>
      </InputProperty>
      <StringVectorProperty
        name="SelectScalarArray"
        command="SelectScalarArray"
        number_of_elements="1"
        animateable="0">
        <ArrayListDomain name="array_list" attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <IntVectorProperty
        name="ScalarMode"
        command="SetScalarMode"
        default_values="3"
        number_of_elements="1"
        animateable="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Default"/>
          <Entry value="1" text="PointData"/>
          <Entry value="2" text="CellData"/>
          <Entry value="3" text="PointFieldData"/>
          <Entry value="4" text="CellFieldData"/>
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty
        name="BlendMode"
        command="SetBlendMode"
        default_values="0"
        number_of_elements="1"
        animateable="0">
        <Documentation>
          Set the current blend mode. Default is Composite. MaximumIntensity is
          also known as MIP rendering.
        </Documentation>
        <EnumerationDomain name="enum">
          <Entry value="0" text="Composite"/>
          <Entry value="1" text="MaximumIntensity"/>
          <Entry value="2" text="MinimumIntensity"/>
        </EnumerationDomain>
      </IntVectorProperty>

      <IntVectorProperty
        name="AutoAdjustSampleDistances"
        command="SetAutoAdjustSampleDistances"
        default_values="1"
        number_of_elements="1"
        animateable="0">
        <Documentation>
        If AutoAdjustSampleDistances is on, the the ImageSampleDistance
        will be varied to achieve the allocated render time of this
        prop (controlled by the desired update rate and any culling in
        use).
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
        name="SampleDistance"
        command="SetSampleDistance"
        default_values="1.0"
        number_of_elements="1"
        animateable="0">
        <Documentation>
        Set/Get the distance between samples used for rendering
        when AutoAdjustSampleDistances is off, or when this mapper
        has more than 1 second allocated to it for rendering.
        </Documentation>
      </DoubleVectorProperty>
      <!-- End of GPUVolumeRayCastMapper -->
    </SourceProxy>

    <SourceProxy name="FixedPointVolumeRayCastMapper"
      class="vtkFixedPointVolumeRayCastMapper"
      processes="client|renderserver|dataserver">
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <DataTypeDomain name="input_type">
          <DataType value="vtkImageData"/>
        </DataTypeDomain>
      </InputProperty>
      <StringVectorProperty
        name="SelectScalarArray"
        command="SelectScalarArray"
        number_of_elements="1"
        animateable="0">
        <ArrayListDomain name="array_list" attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <IntVectorProperty
        name="ScalarMode"
        command="SetScalarMode"
        default_values="3"
        number_of_elements="1"
        animateable="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Default"/>
          <Entry value="1" text="PointData"/>
          <Entry value="2" text="CellData"/>
          <Entry value="3" text="PointFieldData"/>
          <Entry value="4" text="CellFieldData"/>
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty
        name="BlendMode"
        command="SetBlendMode"
        default_values="0"
        number_of_elements="1"
        animateable="0">
        <Documentation>
          Set the current blend mode. Default is Composite. MaximumIntensity is
          also known as MIP rendering.
        </Documentation>
        <EnumerationDomain name="enum">
          <Entry value="0" text="Composite"/>
          <Entry value="1" text="MaximumIntensity"/>
          <Entry value="2" text="MinimumIntensity"/>
        </EnumerationDomain>
      </IntVectorProperty>

      <IntVectorProperty
        name="LockSampleDistanceToInputSpacing"
        command="SetLockSampleDistanceToInputSpacing"
        default_values="1"
        number_of_elements="1"
        animateable="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <!-- End of FixedPointVolumeRayCastMapper -->
    </SourceProxy>

    <SourceProxy name="ImageSliceMapper" class="vtkImageSliceMapper">
      <Documentation>
        Proxy for vtkImageMapper. We may need to change this to be a proxy for a
        new class, vtkPVImageMapper which can use different point data
        attributes as scalars in the image.
      </Documentation>

      <InputProperty
        name="Input"
        command="SetInputConnection">
        <DataTypeDomain name="input_type">
          <DataType value="vtkImageData"/>
        </DataTypeDomain>
      </InputProperty>

      <IntVectorProperty name="Slice"
        command="SetSlice"
        number_of_elements="1"
        default_values="0">
        <Documentation>
          Set the current slice number. Slice number is used to load a 2D slice
          from a 3D input image. If the input image is 2D, then the slice number
          if ignored. The direction of the slice is determined by SliceMode.
        </Documentation>
        <DimensionsDomain name="dims">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
            <Property name="SliceMode" function="Direction"/>
          </RequiredProperties>
        </DimensionsDomain>
      </IntVectorProperty>

      <IntVectorProperty name="SliceMode"
        command="SetSliceMode"
        number_of_elements="1"
        default_values="5">
        <Documentation>
          Determines the direction of slicing to obtain a 2D slice from a 3D
          image.
        </Documentation>
        <EnumerationDomain name="enum" >
          <Entry text="XY Plane" value="5" />
          <Entry text="YZ Plane" value="6" />
          <Entry text="XZ Plane" value="7" />
        </EnumerationDomain>
      </IntVectorProperty>

      <IntVectorProperty name="ScalarVisibility"
        command="SetScalarVisibility"
        number_of_elements="1"
        default_values="0">
        <Documentation>
          Set if scalar mapping must be used even when the input image data
          scalars are unsigned chars i.e. they can be directly rendered as
          color.
        </Documentation>
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty
        name="ScalarMode"
        command="SetScalarMode"
        default_values="0"
        number_of_elements="1"
        animateable="0">
        <Documentation>
          Select where to find the scalars.
        </Documentation>
        <EnumerationDomain name="enum">
          <Entry value="0" text="Default"/>
          <Entry value="1" text="UsePointData"/>
          <Entry value="2" text="UseCellData"/>
          <Entry value="3" text="UsePointFieldData"/>
          <Entry value="4" text="UseCellFieldData"/>
        </EnumerationDomain>
      </IntVectorProperty>

      <StringVectorProperty
        name="ColorArray"
        command="SelectColorArray"
        number_of_elements="1"
        animateable="0">
        <Documentation>
          Choose the name for the scalar array.
        </Documentation>
        <ArrayListDomain name="array_list" attribute_type="Scalars">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>

      <ProxyProperty
        name="LookupTable" command="SetLookupTable">
        <Documentation>
          Set the lookup table to use for scalar mapping.
        </Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="lookup_tables"/>
        </ProxyGroupDomain>
      </ProxyProperty>

     <IntVectorProperty
        name="MapScalars"
        command="SetColorMode"
        number_of_elements="1"
        default_values="1"
        animateable="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          When set to true, LookupTable will always be used for scalar mapping
          even when scalars are unsigned chars. Otherwise, when upto 4 component
          unsigned chars are present, they will be directly used as colors.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="UseXYPlane"
        command="SetUseXYPlane"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
        <Documentation>
          When set, the image slice is always rendered in the XY plane (Z==0)
          irrespective of the image bounds. Default if Off.
        </Documentation>
      </IntVectorProperty>

    <!-- End of ImageSliceMapper -->
    </SourceProxy>

    <SourceProxy name="ScatterPlotMapper" class="vtkScatterPlotMapper"
                 base_proxygroup="mappers" base_proxyname="MapperBase">
      <InputProperty
        name="Input"
        command="SetInputConnection"
        multiple_input="1"
         port_index="0">
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
          <DataType value="vtkGraph"/>
        </DataTypeDomain>
      </InputProperty>

      <InputProperty
        name="GlyphInput"
        command="SetInputConnection"
        multiple_input="1"
         port_index="1">
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData"/>
        </DataTypeDomain>
      </InputProperty>

      <StringVectorProperty name="XCoordsArray"
        command="SetXCoordsArray"
        number_of_elements="1"
        default_values="coord,Points,0">
        <Documentation>
          Set the array for the X coords array.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="YCoordsArray"
        command="SetYCoordsArray"
        number_of_elements="1"
        default_values="coord,Points,1">
        <Documentation>
          Set the array for the Y coords array.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="ZCoordsArray"
        command="SetZCoordsArray"
        number_of_elements="1"
        default_values="coord,Points,2">
        <Documentation>
          Set the array for the Z coords array.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="ColorizeArray"
        command="SetColorArray"
        number_of_elements="1"
        default_values="">
        <Documentation>
          Set the array for the color array.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="GlyphXScalingArray"
        command="SetGlyphXScalingArray"
        number_of_elements="1"
        default_values="coord,Points,0">
        <Documentation>
          Set the array for the glyph x scaling array.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="GlyphYScalingArray"
        command="SetGlyphYScalingArray"
        number_of_elements="1"
        default_values="coord,Points,1">
        <Documentation>
          Set the array for the glyph y scaling array.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="GlyphZScalingArray"
        command="SetGlyphZScalingArray"
        number_of_elements="1"
        default_values="coord,Points,2">
        <Documentation>
          Set the array for the glyph z scaling array.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="GlyphSourceArray"
        command="SetGlyphSourceArray"
        number_of_elements="1"
        default_values="">
        <Documentation>
          Set the array for the glyph source array.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="GlyphXOrientationArray"
        command="SetGlyphXOrientationArray"
        number_of_elements="1"
        default_values="">
        <Documentation>
          Set the array for the glyph x orientation array.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="GlyphYOrientationArray"
        command="SetGlyphYOrientationArray"
        number_of_elements="1"
        default_values="">
        <Documentation>
          Set the array for the glyph y orientation array.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="GlyphZOrientationArray"
        command="SetGlyphZOrientationArray"
        number_of_elements="1"
        default_values="">
        <Documentation>
          Set the array for the glyph z orientation array.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty name="ThreeDMode"
        command="SetThreeDMode"
        number_of_elements="1"
        default_values="0"
        animateable="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty name="Colorize"
        command="SetColorize"
        number_of_elements="1"
        default_values="0"
        animateable="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty
        name="GlyphMode"
        command="SetGlyphMode"
        default_values="0"
        number_of_elements="1"
        animateable="0">
        <IntRangeDomain name="range" min="0" max="15" />
<!--
        <EnumerationDomain name="enum">
          <Entry value="0" text="NoGlyph"/>
          <Entry value="1" text="UseGlyph"/>
          <Entry value="2" text="ScaledGlyph"/>
          <Entry value="4" text="UseMultiGlyph"/>
          <Entry value="8" text="OrientedGlyph"/>
        </EnumerationDomain>
-->
      </IntVectorProperty>

     <IntVectorProperty
        name="ScalingArrayMode"
        command="SetScalingArrayMode"
        default_values="0"
        number_of_elements="1"
        animateable="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Xc_Yc_Zc"/>
          <Entry value="1" text="Xc0_Xc1_Xc2"/>
          <Entry value="2" text="Xc_Xc_Xc"/>
        </EnumerationDomain>
      </IntVectorProperty>

     <IntVectorProperty
        name="ScaleMode"
        command="SetScaleMode"
        default_values="0"
        number_of_elements="1"
        animateable="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="SCALE_BY_MAGNITUDE"/>
          <Entry value="1" text="SCALE_BY_COMPONENTS"/>
        </EnumerationDomain>
      </IntVectorProperty>

     <DoubleVectorProperty
        name="ScaleFactor"
        command="SetScaleFactor"
        number_of_elements="1"
        default_values="1.">
     </DoubleVectorProperty>

     <IntVectorProperty
        name="OrientationMode"
        command="SetOrientationMode"
        default_values="0"
        number_of_elements="1"
        animateable="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="DIRECTION"/>
          <Entry value="1" text="ROTATION"/>
        </EnumerationDomain>
      </IntVectorProperty>

      <IntVectorProperty name="NestedDisplayLists"
        command="SetNestedDisplayLists"
        number_of_elements="1"
        default_values="1"
        animateable="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty name="ParallelToCamera"
        command="SetParallelToCamera"
        number_of_elements="1"
        default_values="0"
        animateable="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

    </SourceProxy>

    <SourceProxy name="Glyph3DMapper" class="vtkGlyph3DMapper"
      base_proxygroup="mappers" base_proxyname="MapperBase">
      <Documentation>
        Mapper for optimized glyph placement.
        Do the same job than vtkGlyph3D but on the GPU. For this reason, it is
        a mapper not a vtkPolyDataAlgorithm. Also, some methods of vtkGlyph3D
        don't make sense in vtkGlyph3DMapper: GeneratePointIds, old-style
        SetSource, PointIdsName, IsPointVisible.
      </Documentation>

      <InputProperty name="Input" command="SetInputConnection">
        <Documentation>
          Set the input dataset which is to be glyphed.
        </Documentation>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet" />
        </DataTypeDomain>
        <InputArrayDomain name="input_array_1" attribute_type="point"
          number_of_components="1" optional="1"/>
        <InputArrayDomain name="input_array_3" attribute_type="point"
          number_of_components="3" optional="1"/>
        <InputArrayDomain name="input_array_any" attribute_type="point" optional="1"/>
      </InputProperty>

      <InputProperty name="Source" 
        command="SetSourceConnection" 
        label="Glyph Type" >
        <Documentation>
          Specify the source objects.
        </Documentation>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData" />
        </DataTypeDomain>
        <ProxyListDomain name="proxy_list">
          <Proxy group="sources" name="ArrowSource" />
          <Proxy group="sources" name="ConeSource" />
          <Proxy group="sources" name="CubeSource" />
          <Proxy group="sources" name="CylinderSource" />
          <Proxy group="sources" name="LineSource" />
          <Proxy group="sources" name="SphereSource" />
          <Proxy group="sources" name="GlyphSource2D" />
        </ProxyListDomain>
      </InputProperty>

      <StringVectorProperty 
        name="SelectMaskArray" 
        command="SetMaskArray"
        number_of_elements="1"
        default_values=""
        label="Mask Array">
        <Documentation>
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty 
        name="SelectScaleArray" 
        command="SetScaleArray"
        number_of_elements="1"
        default_values=""
        label="Scale"> 
      </StringVectorProperty>

      <StringVectorProperty 
        name="SelectOrientationVectors" 
        command="SetOrientationArray"
        number_of_elements="1"
        default_values=""
        label="Orientation Vectors">  
      </StringVectorProperty>

      <IntVectorProperty name="Scaling"
        command="SetScaling"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
        <Documentation>
          Enable/Disable scaling of source geometry.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="ScaleMode"
        command="SetScaleMode"
        number_of_elements="1"
        default_values="0">
        <EnumerationDomain name="enum">
          <Entry text="No Data Scaling Off" value="0" />
          <Entry text="Magnitude" value="1" />
          <Entry text="Vector Components" value="2" />
        </EnumerationDomain>
      </IntVectorProperty>

      <DoubleVectorProperty name="ScaleFactor"
        command="SetScaleFactor"
        number_of_elements="1"
        default_values="1.0" >
        <BoundsDomain name="bounds" mode="scaled_extent" scale_factor="0.1">
          <RequiredProperties>
             <Property name="Input" function="Input"/>
          </RequiredProperties>
        </BoundsDomain>
        <ArrayRangeDomain name="scalar_range">
          <RequiredProperties>
             <Property name="Input" function="Input"/>
             <Property name="SelectInputScalars" function="ArraySelection"/>
          </RequiredProperties>
        </ArrayRangeDomain>
        <ArrayRangeDomain name="vector_range">
          <RequiredProperties>
             <Property name="Input" function="Input"/>
             <Property name="SelectInputVectors" function="ArraySelection"/>
          </RequiredProperties>
        </ArrayRangeDomain>
        <Documentation>
          The value of this property will be used as a multiplier for scaling
          the glyphs before adding them to the output.
        </Documentation>
     </DoubleVectorProperty>

      <IntVectorProperty name="Orient" 
        command="SetOrient" 
        number_of_elements="1"
        default_values="0" > 
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is set to 1, the glyphs will be oriented based on the
          selected orientation vector array.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="OrientationMode"
        command="SetOrientationMode"
        number_of_elements="1"
        default_values="0">
        <EnumerationDomain name="enum">
          <Entry text="Direction" value="0" />
          <Entry text="Rotation" value="1" />
        </EnumerationDomain>
        <Documentation>
          Orientation mode indicates if the OrientationArray provides the
          direction vector for the orientation or the rotations around each
          axes.  Default is DIRECTION.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="Masking"
        command="SetMasking"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
        <Documentation>
          Tells the mapper to skip glyphing input points that haves false values
          in the mask array. If there is no mask array (id access mode is set
          and there is no such id, or array name access mode is set and
          the there is no such name), masking is silently ignored.
          A mask array is a vtkBitArray with only one component.
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty name="BoundsInfo"
        command="GetBounds"
        number_of_elements="6"
        information_only="1"
        default_values="0 1 0 1 0 1" >
        <SimpleDoubleInformationHelper />
      </DoubleVectorProperty>
      <!-- End of Glyph3DMapper -->
    </SourceProxy>
    
  <!-- End of "mappers" -->
  </ProxyGroup>

  <ProxyGroup name="ugrid_raycast_functions">
    <Proxy name="BunykRayCastFunction"
           class="vtkUnstructuredGridBunykRayCastFunction">
    </Proxy>
  </ProxyGroup>

  <ProxyGroup name="textures">
    <SourceProxy name="Texture" class="vtkTexture">
      <InputProperty name="Input" command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkImageData"/>
        </DataTypeDomain>
      </InputProperty>
    </SourceProxy>

    <ImageTextureProxy name="ImageTexture" class="vtkTexture">
      <Documentation>
        This is a proxy for a vtkTexture which also includes an image file
        reader. This reader can read an image of client/data server or render
        server and then transmit it to the client/render server where it will be
        used for texturing.
      </Documentation>
      <SubProxy>
        <Proxy name="Source"
          proxygroup="sources" proxyname="NetworkImageSource" />
        <ExposedProperties>
          <Property name="FileName" />
          <Property name="SourceProcess" />
        </ExposedProperties>
      </SubProxy>
      <IntVectorProperty
        name="RestrictPowerOf2ImageSmaller"
        command="SetRestrictPowerOf2ImageSmaller"
        number_of_elements="1"
        default_values="0"
        animateable="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
    </ImageTextureProxy>
  </ProxyGroup>

  <ProxyGroup name="props">
    <Proxy name="Actor2D" class="vtkActor2D">
      <ProxyProperty
        name="Mapper"
        command="SetMapper">
        <ProxyGroupDomain name="groups">
          <Group name="mappers" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <IntVectorProperty
        name="Visibility"
        command="SetVisibility"
        number_of_elements="1"
        default_values="1"
        animateable="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <DoubleVectorProperty
        name="Position"
        command="SetPosition"
        number_of_elements="2"
        default_values="0 0"
        animateable="0">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty
        name="Position2"
        command="SetPosition2"
        number_of_elements="2"
        default_values="1 1"
        animateable="0">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <!-- End of Actor2D -->
    </Proxy>

    <Proxy name="TextActor" class="vtkTextActor">
      <Documentation>
        Proxy for a text actor. Not to be used directly.
      </Documentation>

      <StringVectorProperty
        name="Text"
        command="SetInput"
        number_of_elements="1"
        animateable="0">
      </StringVectorProperty>

      <IntVectorProperty
        name="Visibility"
        command="SetVisibility"
        number_of_elements="1"
        default_values="1"
        animateable="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <DoubleVectorProperty
        name="Position"
        command="SetPosition"
        number_of_elements="2"
        default_values="0 0"
        animateable="0">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>

      <IntVectorProperty name="TextScaleMode"
        command="SetTextScaleMode"
        number_of_elements="1"
        default_values="2"
        animateable="0">
        <EnumerationDomain>
          <Entry value="0" text="None" />
          <Entry value="1" text="Prop" />
          <Entry value="2" text="Viewport" />
        </EnumerationDomain>
      </IntVectorProperty>

      <ProxyProperty name="TextProperty"
        command="SetTextProperty">
        <ProxyGroupDomain name="groups">
          <Group name="properties"/>
        </ProxyGroupDomain>
      </ProxyProperty>

      <!-- End of TextActor -->
    </Proxy>

    <Proxy name="ActorBase" class="not-used">
      <Documentation>
        Defines interface for an actor. Don't instantiate this
        proxy itself.
      </Documentation>
      <ProxyProperty
        name="Property"
        command="SetProperty"
        immediate_update="1">
        <ProxyGroupDomain name="groups">
          <Group name="properties"/>
        </ProxyGroupDomain>
      </ProxyProperty>
      <ProxyProperty
        name="Mapper"
        command="SetMapper">
        <ProxyGroupDomain name="groups">
          <Group name="mappers" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <IntVectorProperty
        name="Visibility"
        command="SetVisibility"
        number_of_elements="1"
        default_values="1"
        animateable="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <DoubleVectorProperty
        name="Position"
        command="SetPosition"
        number_of_elements="3"
        default_values="0 0 0"
        animateable="0">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty
        name="Scale"
        command="SetScale"
        number_of_elements="3"
        default_values="1 1 1"
        animateable="0">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty
        name="Orientation"
        command="SetOrientation"
        number_of_elements="3"
        default_values="0 0 0"
        animateable="1">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty
        name="Origin"
        command="SetOrigin"
        number_of_elements="3"
        default_values="0 0 0"
        animateable="0">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty
        name="Pickable"
        command="SetPickable"
        number_of_elements="1"
        default_values="1"
        animateable="0">
        <IntRangeDomain name="bool" />
      </IntVectorProperty>
      <!-- End of ActorBase -->
    </Proxy>

    <Proxy name="Actor" class="vtkActor"
      base_proxygroup="props" base_proxyname="ActorBase">
      <Documentation>
        Proxy for a vtkActor.
      </Documentation>
      <ProxyProperty
        name="Texture"
        command="SetTexture"
        null_on_empty="1" >
        <ProxyGroupDomain name="groups">
          <Group name="textures"/>
        </ProxyGroupDomain>
      </ProxyProperty>
      <!-- End of Actor -->
    </Proxy>

    <Proxy name="LODActor" class="vtkPVLODActor"
      base_proxygroup="props" base_proxyname="Actor">
      <ProxyProperty name="LODMapper" command="SetLODMapper">
        <ProxyGroupDomain name="groups">
          <Group name="mappers" />
        </ProxyGroupDomain>
      </ProxyProperty>

      <IntVectorProperty name="EnableLOD"
        command="SetEnableLOD"
        number_of_elements="1"
        default_values="0"
        is_internal="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <!-- End of LODActor -->
    </Proxy>

    <Proxy name="LODVolume" class="vtkPVLODVolume"
      base_proxygroup="props" base_proxyname="ActorBase">
      <ProxyProperty name="LODMapper" command="SetLODMapper">
        <ProxyGroupDomain name="groups">
          <Group name="mappers" />
        </ProxyGroupDomain>
      </ProxyProperty>

      <IntVectorProperty name="EnableLOD"
        command="SetEnableLOD"
        number_of_elements="1"
        default_values="0"
        is_internal="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <!-- End of LODVolume -->
    </Proxy>

    <Proxy name="WidgetRepresentation"
           class="vtkWidgetRepresentation">
      <ProxyProperty name="Renderer" command="SetRenderer">
        <ProxyGroupDomain name="groups">
          <Group name="renderers"/>
        </ProxyGroupDomain>
      </ProxyProperty>

      <IntVectorProperty
         name="NeedToRender"
         command="SetNeedToRender"
         number_of_elements="1"
         default_values="1"
         animateable="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <DoubleVectorProperty
         name="HandleSize"
         command="SetHandleSize"
         number_of_elements="1"
         default_values="5.0">
        <DoubleRangeDomain name="range" min="0.001" max="1000"/>
      </DoubleVectorProperty>

      <DoubleVectorProperty
         name="PlaceFactor"
         command="SetPlaceFactor"
         number_of_elements="1"
         default_values="0.5">
        <DoubleRangeDomain name="range" min="0.01"/>
      </DoubleVectorProperty>
      <!-- End of WidgetRepresentation -->
    </Proxy>

    <Proxy name="CubeAxesActor" class="vtkCubeAxesActor">
      <Documentation>
        Proxy for vtkCubeAxesActor.
      </Documentation>

      <ProxyProperty name="Property"
        command="SetProperty"
        immediate_update="1">
        <Documentation>
          Set the property used to determine the appearance of the axes.
        </Documentation>
      </ProxyProperty>

      <IntVectorProperty name="Visibility"
        command="SetVisibility"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Set the visibility for this actor.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="Pickable"
        command="SetPickable"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <DoubleVectorProperty
        name="Bounds"
        command="SetBounds"
        number_of_elements="6"
        information_property="BoundsInfo"
        default_values="0 1 0 1 0 1">
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="BoundsInfo"
        command="GetBounds"
        number_of_elements="6"
        information_only="1"
        default_values="0 1 0 1 0 1">
      </DoubleVectorProperty>

      <IntVectorProperty name="FlyMode"
        command="SetFlyMode"
        number_of_elements="1"
        default_values="1">
        <EnumerationDomain name="enum">
          <Entry text="Outer Edges" value="0" />
          <Entry text="Closest Triad" value="1" />
          <Entry text="Furthest Triad" value="2" />
          <Entry text="Static Triad" value="3" />
          <Entry text="Static Edges" value="4" />
        </EnumerationDomain>
        <Documentation>
          Specify a mode to control how the axes are drawn: either static,
          closest triad, furthest triad or outer edges in relation to the
          camera position.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="Inertia"
        command="SetInertia"
        number_of_elements="1"
        default_values="1">
        <IntRangeDomain name="range" min="1" />
        <Documentation>
          Set the inertial factor that controls how often (i.e, how
          many renders) the axes can switch position (jump from one axes
          to another).
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty name="CornerOffset"
        command="SetCornerOffset"
        number_of_elements="1"
        default_values="0.0">
        <DoubleRangeDomain name="range" />
        <Documentation>
          Specify an offset value to "pull back" the axes from the corner at
          which they are joined to avoid overlap of axes labels. The
          "CornerOffset" is the fraction of the axis length to pull back.
        </Documentation>
      </DoubleVectorProperty>

      <StringVectorProperty name="XTitle"
        command="SetXTitle"
        number_of_elements="1"
        default_values="X-Axis">
        <Documentation>
          Set the title for the X axis.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="YTitle"
        command="SetYTitle"
        number_of_elements="1"
        default_values="Y-Axis">
        <Documentation>
          Set the title for the Y axis.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="ZTitle"
        command="SetZTitle"
        number_of_elements="1"
        default_values="Z-Axis">
        <Documentation>
          Set the title for the Z axis.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty  name="XAxisVisibility"
        command="SetXAxisVisibility"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Specify if X axis is visible.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty  name="YAxisVisibility"
        command="SetYAxisVisibility"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Specify if Y axis is visible.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty  name="ZAxisVisibility"
        command="SetZAxisVisibility"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Specify if Z axis is visible.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty  name="XAxisTickVisibility"
        command="SetXAxisTickVisibility"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Specify if ticks are visible on the X axis.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty  name="YAxisTickVisibility"
        command="SetYAxisTickVisibility"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Specify if ticks are visible on the Y axis.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty  name="ZAxisTickVisibility"
        command="SetZAxisTickVisibility"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Specify if ticks are visible on the Z axis.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty  name="XAxisMinorTickVisibility"
        command="SetXAxisMinorTickVisibility"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Specify if minor ticks are visible on the X axis.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty  name="YAxisMinorTickVisibility"
        command="SetYAxisMinorTickVisibility"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Specify if minor ticks are visible on the Y axis.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty  name="ZAxisMinorTickVisibility"
        command="SetZAxisMinorTickVisibility"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Specify if minor ticks are visible on the Z axis.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="XGridLines"
        command="SetDrawXGridlines"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
        <Documentation>
          Specify if grid lines are drawn parallel to X axis.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="YGridLines"
        command="SetDrawYGridlines"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
        <Documentation>
          Specify if grid lines are drawn parallel to Y axis.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="ZGridLines"
        command="SetDrawZGridlines"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
        <Documentation>
          Specify if grid lines are drawn parallel to Z axis.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="TickLocation"
        command="SetTickLocation"
        number_of_elements="1"
        default_values="0">
        <EnumerationDomain name="enum">
          <Entry text="Inside" value="0" />
          <Entry text="Outside" value="1" />
          <Entry text="Both" value="2" />
        </EnumerationDomain>
        <Documentation>
          Set the location of tick marks.
        </Documentation>
      </IntVectorProperty>
      <!-- End of CubeAxesActor -->
    </Proxy>

    <!-- =========================================================== -->
    <Proxy name="LegendScaleActor" class="vtkLegendScaleActor">
      <Documentation>
        This is a proxy for vtkLegendScaleActor. vtkLegendScaleActor can be used
        to annotate the render window with scale and distance information.
      </Documentation>

      <IntVectorProperty name="LabelMode"
        command="SetLabelMode"
        number_of_elements="1"
        default_values="1">
        <EnumerationDomain name="enum">
          <Entry text="Distance" value="0" />
          <Entry text="XY Coordinates" value="1" />
        </EnumerationDomain>
      </IntVectorProperty>

      <IntVectorProperty name="Visibility"
        command="SetVisibility"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty name="LegendVisibility"
        command="SetLegendVisibility"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <DoubleVectorProperty name="CornerOffsetFactor"
        command="SetCornerOffsetFactor"
        number_of_elements="1"
        default_values="1.0">
        <DoubleRangeDomain name="range" min="1.0" max="5.0" />
      </DoubleVectorProperty>

      <IntVectorProperty name="RightAxisVisibility"
        command="SetRightAxisVisibility"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty name="TopAxisVisibility"
        command="SetTopAxisVisibility"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty name="LeftAxisVisibility"
        command="SetLeftAxisVisibility"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty name="BottomAxisVisibility"
        command="SetBottomAxisVisibility"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <!-- End of LegendScaleActor -->
    </Proxy>

    <!-- End of group "props" -->
  </ProxyGroup>

  <ProxyGroup name="properties">
    <Proxy name="TextProperty" class="vtkTextProperty">
      <DoubleVectorProperty
        name="Color"
        command="SetColor"
        number_of_elements="3"
        argument_is_array="1"
        default_values="1.0 1.0 1.0"
        animateable="0">
        <DoubleRangeDomain name="range" min="0 0 0" max="1 1 1" />
      </DoubleVectorProperty>

      <DoubleVectorProperty
        name="Opacity"
        command="SetOpacity"
        number_of_elements="1"
        default_values="1.0"
        animateable="0">
        <DoubleRangeDomain name="range" min="0.0" max="1.0" />
      </DoubleVectorProperty>

      <IntVectorProperty
        name="FontFamily"
        command="SetFontFamily"
        number_of_elements="1"
        default_values="0"
        animateable="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Arial"/>
          <Entry value="1" text="Courier"/>
          <Entry value="2" text="Times"/>
        </EnumerationDomain>
      </IntVectorProperty>

      <IntVectorProperty
        name="Bold"
        command="SetBold"
        number_of_elements="1"
        default_values="0"
        animateable="0">
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty
        name="Italic"
        command="SetItalic"
        number_of_elements="1"
        default_values="0"
        animateable="0">
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty
        name="Shadow"
        command="SetShadow"
        number_of_elements="1"
        default_values="0"
        animateable="0">
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty
        name="FontSize"
        command="SetFontSize"
        number_of_elements="1"
        default_values="18"
        animateable="0">
        <IntRangeDomain name="range" min="0" />
      </IntVectorProperty>

      <DoubleVectorProperty name="Orientation"
        command="SetOrientation"
        number_of_elements="1"
        default_values="0"
        animateable="0">
      </DoubleVectorProperty>

      <DoubleVectorProperty name="LineOffset"
        command="SetLineOffset"
        number_of_elements="1"
        default_values="0"
        animateable="0">
      </DoubleVectorProperty>

      <IntVectorProperty name="Justification"
        command="SetJustification"
        number_of_elements="1"
        default_values="0"
        animateable="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Left"/>
          <Entry value="1" text="Center"/>
          <Entry value="2" text="Right"/>
        </EnumerationDomain>
      </IntVectorProperty>

      <IntVectorProperty name="VerticalJustification"
        command="SetVerticalJustification"
        number_of_elements="1"
        default_values="0"
        animateable="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Bottom"/>
          <Entry value="1" text="Center"/>
          <Entry value="2" text="Top"/>
        </EnumerationDomain>
      </IntVectorProperty>

      <!-- End of TextProperty -->
    </Proxy>

    <Proxy name="VolumeProperty" class="vtkVolumeProperty">
      <IntVectorProperty
        name="InterpolationType"
        command="SetInterpolationType"
        number_of_elements="1"
        default_values="1"
        animateable="0">
        <EnumerationDomain name="enum" >
          <Entry value="0" text="Nearest" />
          <Entry value="1" text="Linear" />
        </EnumerationDomain>
      </IntVectorProperty>
      <!-- Why is this duplicate property present? -->
      <ProxyProperty
        name="GrayTransferFunction"
        command="SetColor">
        <ProxyGroupDomain name="groups">
          <Group name="piecewise_functions" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <ProxyProperty
        name="ColorTransferFunction"
        command="SetColor">
        <ProxyGroupDomain name="groups">
          <Group name="transfer_functions" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <ProxyProperty
        name="ScalarOpacityFunction"
        command="SetScalarOpacity">
        <ProxyGroupDomain name="groups">
          <Group name="piecewise_functions" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <DoubleVectorProperty
        name="ScalarOpacityUnitDistance"
        command="SetScalarOpacityUnitDistance"
        number_of_elements="1"
        default_values="1"
        animateable="0">
      </DoubleVectorProperty>
    </Proxy>

    <Proxy name="PropertyBase" class="vtkProperty">
      <Documentation>
        This is a vtkProperty API without any color properties.
      </Documentation>
      <DoubleVectorProperty name="LineWidth"
        command="SetLineWidth"
        number_of_elements="1"
        default_values="1.0"
        animateable="0">
        <DoubleRangeDomain name="range" min="0"/>
      </DoubleVectorProperty>

      <DoubleVectorProperty name="PointSize"
        command="SetPointSize"
        number_of_elements="1"
        default_values="2.0"
        animateable="0">
        <DoubleRangeDomain name="range" min="0" />
      </DoubleVectorProperty>

      <IntVectorProperty name="Interpolation"
        command="SetInterpolation"
        number_of_elements="1"
        default_values="1"
        animateable="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Flat" />
          <Entry value="1" text="Gouraud" />
          <!--<Entry value="2" text="Phong" />-->
        </EnumerationDomain>
      </IntVectorProperty>

      <IntVectorProperty name="Representation"
        command="SetRepresentation"
        number_of_elements="1"
        default_values="2"
        animateable="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Points" />
          <Entry value="1" text="Wireframe" />
          <Entry value="2" text="Surface" />
        </EnumerationDomain>
      </IntVectorProperty>

      <DoubleVectorProperty name="Opacity"
        command="SetOpacity"
        number_of_elements="1"
        default_values="1.0"
        animateable="1">
        <DoubleRangeDomain name="range" min="0" max="1" />
      </DoubleVectorProperty>

      <DoubleVectorProperty name="Ambient"
        command="SetAmbient"
        number_of_elements="1"
        default_values="0.0"
        animateable="0">
        <DoubleRangeDomain name="range" min="0" max="1" />
      </DoubleVectorProperty>

      <DoubleVectorProperty name="Diffuse"
        command="SetDiffuse"
        number_of_elements="1"
        default_values="1.0"
        animateable="0">
        <DoubleRangeDomain name="range" min="0" max="1" />
      </DoubleVectorProperty>

      <IntVectorProperty name="Shading"
        command="SetShading"
        number_of_elements="1"
        default_values="0"
        animateable="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <DoubleVectorProperty name="Specular"
        command="SetSpecular"
        number_of_elements="1"
        default_values="0.1"
        animateable="0">
        <DoubleRangeDomain name="range" min="0" max="1" />
      </DoubleVectorProperty>

      <DoubleVectorProperty name="SpecularPower"
        command="SetSpecularPower"
        number_of_elements="1"
        default_values="100.0"
        animateable="0">
        <DoubleRangeDomain name="range" min="0" max="100" />
      </DoubleVectorProperty>

      <DoubleVectorProperty name="EdgeColor"
        command="SetEdgeColor"
        number_of_elements="3"
        default_values="0 0 0.5">
        <Documentation>
          Set the edge color. This color is used to draw the edge for the
          polygonal data when EdgeVisibility is on.
        </Documentation>
        <DoubleRangeDomain name="range" min="0 0 0" max="1 1 1"/>
      </DoubleVectorProperty>

      <IntVectorProperty name="EdgeVisibility"
        command="SetEdgeVisibility"
        number_of_elements="1"
        default_values="0">
        <Documentation>
          Set the edge visibility. This has any effect only when Visibility is
          On and Representation type if Surface.
        </Documentation>
        <BooleanDomain name="bool"/>
      </IntVectorProperty>

      <IntVectorProperty name="BackfaceCulling"
                         command="SetBackfaceCulling"
                         number_of_elements="1"
                         default_values="0">
        <Documentation>
          Turn on/off backface culling.  When on, polygons facing away from the
          camera will not be drawn.
        </Documentation>
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty name="FrontfaceCulling"
                         command="SetFrontfaceCulling"
                         number_of_elements="1"
                         default_values="0">
        <Documentation>
          Turn on/off frontface culling.  When on, polygons facing towards
          from the camera will not be drawn.
        </Documentation>
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <!-- End of PropertyBase -->
    </Proxy>

    <Proxy name="Property" class="vtkProperty"
      base_proxygroup="properties" base_proxyname="PropertyBase">
      <Documentation>
        Proxy for vtkProperty with 3 separate properties for the 3 colors.
      </Documentation>

      <DoubleVectorProperty name="AmbientColor"
        command="SetAmbientColor"
        number_of_elements="3"
        default_values="1.0 1.0 1.0"
        animateable="0">
        <DoubleRangeDomain name="range" min="0 0 0" max="1 1 1" />
      </DoubleVectorProperty>

      <DoubleVectorProperty name="DiffuseColor"
        command="SetDiffuseColor"
        number_of_elements="3"
        default_values="1.0 1.0 1.0"
        animateable="0">
        <DoubleRangeDomain name="range" min="0 0 0" max="1 1 1" />
      </DoubleVectorProperty>

      <DoubleVectorProperty name="SpecularColor"
        command="SetSpecularColor"
        number_of_elements="3"
        default_values="1.0 1.0 1.0"
        animateable="0">
        <DoubleRangeDomain name="range" min="0 0 0" max="1 1 1" />
      </DoubleVectorProperty>

      <!-- End of Property -->
    </Proxy>

    <Proxy name="Property2" class="vtkProperty"
      base_proxygroup="properties" base_proxyname="PropertyBase">
      <Documentation>
        Proxy for vtkProperty with a single property "Color" for controlling all
        the 3 color components.
      </Documentation>
      <DoubleVectorProperty name="Color"
        command="SetColor"
        number_of_elements="3"
        default_values="1.0 1.0 1.0"
        animateable="0">
        <DoubleRangeDomain name="range" min="0 0 0" max="1 1 1" />
      </DoubleVectorProperty>
      <!-- End of Property2 -->
    </Proxy>

    <Proxy name="Property2D" class="vtkProperty2D">
      <DoubleVectorProperty
        name="Color"
        command="SetColor"
        number_of_elements="3"
        default_values="1 1 1"
        animateable="0">
        <DoubleRangeDomain name="range" min="0 0 0" max="1 1 1" />
      </DoubleVectorProperty>
      <DoubleVectorProperty
        name="Opacity"
        command="SetOpacity"
        number_of_elements="1"
        default_values="1"
        animateable="0">
        <DoubleRangeDomain name="range" min="0" max="1" />
      </DoubleVectorProperty>
      <DoubleVectorProperty
        name="LineWidth"
        command="SetLineWidth"
        number_of_elements="1"
        default_values="1.0"
        animateable="0">
        <DoubleRangeDomain name="range" min="0"/>
      </DoubleVectorProperty>
      <DoubleVectorProperty
        name="PointSize"
        command="SetPointSize"
        number_of_elements="1"
        default_values="1.0"
        animateable="0">
        <DoubleRangeDomain name="range" min="0" />
      </DoubleVectorProperty>
    <!-- End of Property2D -->
    </Proxy>
  </ProxyGroup>

  <ProxyGroup name="interactors">
    <Proxy name="GenericRenderWindowInteractor" class="vtkPVGenericRenderWindowInteractor">
      <ProxyProperty
        name="Renderer"
        command="SetRenderer">
        <ProxyGroupDomain name="groups">
          <Group  name="renderers" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <ProxyProperty
        name="InteractorStyle"
        command="SetInteractorStyle">
        <ProxyGroupDomain name="groups">
          <Group  name="interactorstyles" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <DoubleVectorProperty
        name="CenterOfRotation"
        command="SetCenterOfRotation"
        number_of_elements="3"
        default_values="0 0 0">
      </DoubleVectorProperty>
    </Proxy>
  </ProxyGroup>

  <ProxyGroup name="interactorstyles">
    <Proxy name="InteractorStyle" class="vtkPVInteractorStyle">
      <ProxyProperty
        name="CameraManipulators"
        command="AddManipulator"
        clean_command="RemoveAllManipulators"
        is_internal="1"
        repeatable="1">
        <!-- For now, we are marking this property is_internal so that it won't
        get saved in state files.
        Eventually, we need to take out all the interaction related code from
        the server manager -->
        <ProxyGroupDomain name="groups">
          <Group name="cameramanipulators" />
        </ProxyGroupDomain>
      </ProxyProperty>
    </Proxy>
  </ProxyGroup>

  <ProxyGroup name="cameramanipulators">
    <Proxy name="CameraManipulator" class="vtkCameraManipulator">
      <IntVectorProperty
        name="Button"
        command="SetButton"
        number_of_elements="1"
        default_values="1">
        <EnumerationDomain name="enum">
          <Entry value="1" text="Left Button"/>
          <Entry value="2" text="Center Button"/>
          <Entry value="3" text="Right Button"/>
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty
        name="Shift"
        command="SetShift"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="IsShiftPressed"/>
      </IntVectorProperty>
      <IntVectorProperty
        name="Control"
        command="SetControl"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="IsControlPressed"/>
      </IntVectorProperty>
      <StringVectorProperty
        name="ManipulatorName"
        command="SetManipulatorName"
        number_of_elements="1">
      </StringVectorProperty>
    </Proxy>

    <Proxy name="JoystickFlyIn" class="vtkPVJoystickFlyIn" base_proxygroup="cameramanipulators"
      base_proxyname="CameraManipulator" processes="client">
      <DoubleVectorProperty
        name="FlySpeed"
        command="SetFlySpeed"
        number_of_elements="1"
        default_values="15">
        <DoubleRangeDomain name="range" min="1" max="30"/>
      </DoubleVectorProperty>
    </Proxy>

    <Proxy name="JoystickFlyOut" class="vtkPVJoystickFlyOut" base_proxygroup="cameramanipulators"
      base_proxyname="CameraManipulator" processes="client">
      <DoubleVectorProperty
        name="FlySpeed"
        command="SetFlySpeed"
        number_of_elements="1"
        default_values="15">
        <DoubleRangeDomain name="range" min="1" max="30"/>
      </DoubleVectorProperty>
    </Proxy>

    <Proxy name="TrackballMoveActor" class="vtkPVTrackballMoveActor" base_proxygroup="cameramanipulators"
      base_proxyname="CameraManipulator" processes="client"/>

    <Proxy name="TrackballPan1" class="vtkTrackballPan" base_proxygroup="cameramanipulators"
      base_proxyname="CameraManipulator" processes="client"/>

    <Proxy name="TrackballPan2" class="vtkPVTrackballPan" base_proxygroup="cameramanipulators"
      base_proxyname="CameraManipulator" processes="client"/>

    <Proxy name="TrackballRoll" class="vtkPVTrackballRoll" base_proxygroup="cameramanipulators"
      base_proxyname="CameraManipulator" processes="client"/>

    <Proxy name="TrackballRotate" class="vtkPVTrackballRotate" base_proxygroup="cameramanipulators"
      base_proxyname="CameraManipulator" processes="client"/>

    <Proxy name="TrackballZoom" class="vtkPVTrackballZoom" base_proxygroup="cameramanipulators"
      base_proxyname="CameraManipulator" processes="client"/>

    <Proxy name="TrackballMultiRotate" class="vtkPVTrackballMultiRotate"
           base_proxygroup="cameramanipulators"
           base_proxyname="CameraManipulator" processes="client"/>
  </ProxyGroup>

  <ProxyGroup name="compositers">
    <Proxy name="CompressCompositer" class="vtkCompressCompositer">
    </Proxy>
    <Proxy  name="TreeCompositer" class="vtkTreeCompositer">
    </Proxy>
  </ProxyGroup>



  <ProxyGroup name="composite_managers">
    <!-- =================================================================== -->
    <Proxy name="DesktopDeliveryClient" class="vtkPVDesktopDeliveryClient">
      <ProxyProperty name="RenderWindow"
                     command="SetRenderWindow">
        <ProxyGroupDomain name="groups">
          <Group name="renderwindow" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <Property name="InitializeRMIs"
                command="InitializeRMIs">
      </Property>
      <Property name="InitializeOffScreen"
                command="InitializeOffScreen">
      </Property>
      <IntVectorProperty name="ImageReductionFactor"
                         command="SetImageReductionFactor"
                         number_of_elements="1"
                         default_values="1">
        <IntRangeDomain name="range" min="0" />
      </IntVectorProperty>
      <IntVectorProperty name="UseCompositing"
                         command="SetUseCompositing"
                         number_of_elements="1"
                         default_values="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty name="SyncRenderWindowRenderers"
                         command="SetSyncRenderWindowRenderers"
                         number_of_elements="1"
                         default_values="1">
        <BooleanDomain name="bool"/>
      </IntVectorProperty>
      <ProxyProperty name="Renderers"
                     command="AddRenderer"
                     clean_command="RemoveAllRenderers"
                     repeatable="1">
        <ProxyGroupDomain name="groups">
          <Group name="renderers"/>
        </ProxyGroupDomain>
      </ProxyProperty>
      <IntVectorProperty
        name="SetUseBackBuffer"
        command="SetUseBackBuffer"
        number_of_elements="1"
        default_values="1">
        <IntRangeDomain name="range" min="0" max="1" />
      </IntVectorProperty>

      <IntVectorProperty  name="SynchronizeTileProperties"
        command="SetSynchronizeTileProperties"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          When set the render manager will synchronize the TileViewport and
          TileScale properties. This may not be desirable in cases where
          there's some other mechanism to set the tile dimensions
          eg. Tile displays.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="CompressionEnabled"
        command="SetCompressionEnabled"
        number_of_elements="1"
        default_values="1">
      <IntRangeDomain name="range" min="0" max="1"/>
      </IntVectorProperty>

      <StringVectorProperty
        name="CompressorConfig"
        command="ConfigureCompressor"
        number_of_elements="1"
        default_values="vtkSquirtCompressor 0 3"/>

      <IntVectorProperty
        name="LossLessCompression"
        command="SetLossLessCompression"
        number_of_elements="1"
        default_values="0">
      <IntRangeDomain name="range" min="0" max="1"/>
      </IntVectorProperty>
      <!-- End of DesktopDeliveryClient -->
    </Proxy>

    <!-- =================================================================== -->
    <Proxy name="DesktopDeliveryServer" class="vtkPVDesktopDeliveryServer"
           base_proxygroup="composite_managers"
           base_proxyname="DesktopDeliveryClient">
    </Proxy>

    <!-- =================================================================== -->
    <Proxy name="IceTRenderManager" class="vtkIceTRenderManager">
      <ProxyProperty name="RenderWindow"
                     command="SetRenderWindow">
        <ProxyGroupDomain name="groups">
          <Group name="renderwindow" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <IntVectorProperty name="TileDimensions"
                         command="SetTileDimensions"
                         number_of_elements="2"
                         default_values="0 0">
        <IntRangeDomain name="range" min="0 0" />
      </IntVectorProperty>
      <IntVectorProperty name="TileMullions"
                         command="SetTileMullions"
                         number_of_elements="2"
                         default_values="0 0">
        <IntRangeDomain name="range" min="0 0" />
      </IntVectorProperty>

      <IntVectorProperty name="EnableTiles"
        command="SetEnableTiles"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
        <Documentation>
          To use tile displays, it is essential to set this property to 1.
        </Documentation>
      </IntVectorProperty>

      <ProxyProperty name="SortingKdTree" command="SetSortingKdTree">
        <ProxyGroupDomain name="groups">
          <Group name="locators"/>
        </ProxyGroupDomain>
      </ProxyProperty>
      <Property name="InitializeOffScreen"
                command="InitializeOffScreen">
      </Property>
    </Proxy>

    <Proxy name="MPICompositeManager" class="vtkMPICompositeManager">
      <ProxyProperty
        name="RenderWindow"
        command="SetRenderWindow">
        <ProxyGroupDomain name="groups">
          <Group name="renderwindow" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <ProxyProperty
        name="Compositer"
        command="SetCompositer">
        <ProxyGroupDomain name="group">
          <Group name="compositers" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <Property
        name="InitializeOffScreen"
        command="InitializeOffScreen">
      </Property>
      <Property
        name="InitializeRMIs"
        command="InitializeRMIs">
      </Property>
      <IntVectorProperty
        name="ImageReductionFactor"
        command="SetImageReductionFactor"
        number_of_elements="1"
        default_values="1">
        <IntRangeDomain name="range" min="0" />
      </IntVectorProperty>
      <IntVectorProperty
        name="UseCompositing"
        command="SetParallelRendering"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty
        name="TileWindows"
        number_of_elements="3"
        command="TileWindows"
        default_values="0 0 1">
      </IntVectorProperty>
      <IntVectorProperty name="SyncRenderWindowRenderers"
        command="SetSyncRenderWindowRenderers"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool"/>
      </IntVectorProperty>
      <ProxyProperty name="Renderers"
        command="AddRenderer"
        remove_command="RemoveRenderer"
        clean_command="RemoveAllRenderers"
        repeatable="1">
        <ProxyGroupDomain name="groups">
          <Group name="renderers"/>
        </ProxyGroupDomain>
      </ProxyProperty>
    </Proxy>

    <!-- =================================================================== -->
    <Proxy name="CaveRenderManager" class="vtkCaveRenderManager">
      <ProxyProperty name="RenderWindow"
                     command="SetRenderWindow">
        <ProxyGroupDomain name="groups">
          <Group name="renderwindow" />
        </ProxyGroupDomain>
      </ProxyProperty>

      <IntVectorProperty name="NumberOfDisplays"
          command="SetNumberOfDisplays"
          number_of_elements="1"
          default_values="1">
      </IntVectorProperty>
      <DoubleVectorProperty name="Displays"
                        command="SetDisplay"
                        repeat_command="1"
                        number_of_elements_per_command="10">
      </DoubleVectorProperty>

    </Proxy>
  </ProxyGroup>

  <ProxyGroup name="PropPickers">
    <Proxy name="AreaPicker"
           class="vtkRenderedAreaPicker">

      <ProxyProperty
        name="SetRenderer"
        command="SetRenderer">
        <ProxyGroupDomain name="groups">
          <Group name="renderers"/>
        </ProxyGroupDomain>
      </ProxyProperty>

      <DoubleVectorProperty
        name="SetPickCoords"
        command="SetPickCoords"
        number_of_elements="4"
        default_values="0.0 0.0 0.0 0.0">
        <DoubleRangeDomain name="range" min="0.0 0.0 0.0 0.0"/>
      </DoubleVectorProperty>

      <Property
        name="Pick"
        command="Pick"
        is_internal="1">
      </Property>
    </Proxy>

    <HardwareSelector name="HardwareSelector" class="vtkPVHardwareSelector">

      <ProxyProperty name="Renderer"
        command="SetRenderer">
      </ProxyProperty>

      <IntVectorProperty name="Area"
        command="SetArea"
        number_of_elements="4"
        default_values="0 0 0 0">
      </IntVectorProperty>

      <IntVectorProperty name="FieldAssociation"
        command="SetFieldAssociation"
        number_of_elements="1"
        default_values="1">
        <EnumerationDomain name="enum">
          <Entry text="Points" value="0" />
          <Entry text="Cells" value="1" />
        </EnumerationDomain>
      </IntVectorProperty>

      <IdTypeVectorProperty name="NumberOfIDs"
        command="SetNumberOfIDs"
        number_of_elements="1"
        default_values="0">
      </IdTypeVectorProperty>

      <IntVectorProperty name="NumberOfProcesses"
        command="SetNumberOfProcesses"
        number_of_elements="1"
        default_values="1">
      </IntVectorProperty>


    </HardwareSelector>
    <!-- End of PropPickers -->
  </ProxyGroup>

  <ProxyGroup name="strategies">
    <SimpleStrategy name="PolyDataStrategy">
      <Documentation>
        Representation stragegy can be used for poly data surface rendering with
        LOD. (Does not support client-server/parallel pipelines).
      </Documentation>

      <InputProperty
        name="Input"
        command="not-used">
        <Documentation>
          The input to the strategy.
        </Documentation>
      </InputProperty>

      <SubProxy>
        <Proxy name="CacheKeeper"
          proxygroup="filters" proxyname="CacheKeeper" />
      </SubProxy>

      <SubProxy>
        <Proxy name="LODDecimator"
          proxygroup="filters" proxyname="QuadricClustering" />
      </SubProxy>

      <SubProxy>
        <Proxy name="UpdateSuppressor"
          proxygroup="filters" proxyname="UpdateSuppressor2">
        </Proxy>
        <ExposedProperties>
          <Property name="UpdateTime" />
        </ExposedProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="UpdateSuppressorLOD"
          proxygroup="filters" proxyname="UpdateSuppressor2">
        </Proxy>
        <ShareProperties subproxy="UpdateSuppressor" >
          <Exception name="Input" />
          <Exception name="ForceUpdate" />
        </ShareProperties>
      </SubProxy>

      <!-- End of PolyDataStrategy -->
    </SimpleStrategy>

    <UnstructuredDataParallelStrategy name="PolyDataParallelStrategy"
      base_proxygroup="strategies"
      base_proxyname="PolyDataStrategy">

      <SubProxy>
        <Proxy name="PostCollectUpdateSuppressor" proxygroup="filters"
          proxyname="UpdateSuppressor2">
        </Proxy>
        <ShareProperties subproxy="UpdateSuppressor" >
          <Exception name="Input" />
          <Exception name="ForceUpdate" />
        </ShareProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="Collect" proxygroup="filters" proxyname="MPIMoveData">
        </Proxy>
      </SubProxy>

      <SubProxy>
        <Proxy name="PostDistributorSuppressor" proxygroup="filters"
          proxyname="UpdateSuppressor2">
        </Proxy>
        <ShareProperties subproxy="UpdateSuppressor" >
          <Exception name="Input" />
          <Exception name="ForceUpdate" />
        </ShareProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="Distributor" proxygroup="filters"
          proxyname="OrderedCompositeDistributor">
        </Proxy>
      </SubProxy>

      <SubProxy>
        <Proxy name="PostCollectUpdateSuppressorLOD" proxygroup="filters"
          proxyname="UpdateSuppressor2">
        </Proxy>
        <ShareProperties subproxy="UpdateSuppressorLOD" >
          <Exception name="Input" />
          <Exception name="ForceUpdate" />
        </ShareProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="CollectLOD" proxygroup="filters" proxyname="MPIMoveData">
        </Proxy>
      </SubProxy>

      <SubProxy>
        <Proxy name="PostDistributorSuppressorLOD" proxygroup="filters"
          proxyname="UpdateSuppressor2">
        </Proxy>
        <ShareProperties subproxy="UpdateSuppressorLOD" >
          <Exception name="Input" />
          <Exception name="ForceUpdate" />
        </ShareProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="DistributorLOD" proxygroup="filters"
          proxyname="OrderedCompositeDistributor">
        </Proxy>
        <ShareProperties subproxy="Distributor" >
          <Exception name="Input" />
        </ShareProperties>
      </SubProxy>

      <!-- End of PolyDataParallelStrategy -->
    </UnstructuredDataParallelStrategy>

    <SimpleStrategy name="UnstructuredGridStrategy" >
      <Documentation>
        Representation strategy can be used for unstructured grid volume rendering.
        This differs from PolyDataStrategy in the LODDecimator. Here, we are
        using a GeometryFilter as the LODDecimator.
      </Documentation>

      <InputProperty
        name="Input"
        command="not-used">
        <Documentation>
          The input to the strategy.
        </Documentation>
      </InputProperty>

      <SubProxy>
        <Proxy name="CacheKeeper"
          proxygroup="filters" proxyname="CacheKeeper" />
      </SubProxy>

      <SubProxy>
        <Proxy name="LODDecimator"
          proxygroup="filters" proxyname="GeometryFilter" />
      </SubProxy>

      <SubProxy>
        <Proxy name="UpdateSuppressor"
          proxygroup="filters" proxyname="UpdateSuppressor2">
        </Proxy>
        <ExposedProperties>
          <Property name="UpdateTime" />
        </ExposedProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="UpdateSuppressorLOD"
          proxygroup="filters" proxyname="UpdateSuppressor2">
        </Proxy>
        <ShareProperties subproxy="UpdateSuppressor" >
          <Exception name="Input" />
          <Exception name="ForceUpdate" />
        </ShareProperties>
      </SubProxy>

      <!-- End of UnstructuredGridStrategy -->
    </SimpleStrategy>

    <UnstructuredGridParallelStrategy name="UnstructuredGridParallelStrategy"
      base_proxygroup="strategies"
      base_proxyname="UnstructuredGridStrategy">

      <SubProxy>
        <Proxy name="PostCollectUpdateSuppressor" proxygroup="filters"
          proxyname="UpdateSuppressor2">
        </Proxy>
        <ShareProperties subproxy="UpdateSuppressor" >
          <Exception name="Input" />
          <Exception name="ForceUpdate" />
        </ShareProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="Collect" proxygroup="filters" proxyname="MPIMoveData">
        </Proxy>
      </SubProxy>

      <SubProxy>
        <Proxy name="PostDistributorSuppressor" proxygroup="filters"
          proxyname="UpdateSuppressor2">
        </Proxy>
        <ShareProperties subproxy="UpdateSuppressor" >
          <Exception name="Input" />
          <Exception name="ForceUpdate" />
        </ShareProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="Distributor" proxygroup="filters"
          proxyname="OrderedCompositeDistributor">
        </Proxy>
      </SubProxy>

      <SubProxy>
        <Proxy name="PostCollectUpdateSuppressorLOD" proxygroup="filters"
          proxyname="UpdateSuppressor2">
        </Proxy>
        <ShareProperties subproxy="UpdateSuppressorLOD" >
          <Exception name="Input" />
          <Exception name="ForceUpdate" />
        </ShareProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="CollectLOD" proxygroup="filters" proxyname="MPIMoveData">
        </Proxy>
      </SubProxy>

      <SubProxy>
        <Proxy name="PostDistributorSuppressorLOD" proxygroup="filters"
          proxyname="UpdateSuppressor2">
        </Proxy>
        <ShareProperties subproxy="UpdateSuppressorLOD" >
          <Exception name="Input" />
          <Exception name="ForceUpdate" />
        </ShareProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="DistributorLOD" proxygroup="filters"
          proxyname="OrderedCompositeDistributor">
        </Proxy>
        <ShareProperties subproxy="Distributor">
          <Exception name="Input" />
        </ShareProperties>
      </SubProxy>

      <!-- End of UnstructuredGridParallelStrategy -->
    </UnstructuredGridParallelStrategy>

    <UniformGridParallelStrategy name="UniformGridParallelStrategy" >
      <Documentation>
        Representation strategy can be used for uniform grid volume rendering.
      </Documentation>

      <InputProperty
        name="Input"
        command="not-used">
        <Documentation>
          The input to the strategy.
        </Documentation>
      </InputProperty>

      <SubProxy>
        <Proxy name="CacheKeeper"
          proxygroup="filters" proxyname="CacheKeeper" />
      </SubProxy>

      <SubProxy>
        <Proxy name="UpdateSuppressor"
          proxygroup="filters" proxyname="UpdateSuppressor2">
        </Proxy>
        <ExposedProperties>
          <Property name="UpdateTime" />
        </ExposedProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="LODDecimator"
          proxygroup="filters" proxyname="OutlineFilter">
        </Proxy>
      </SubProxy>

      <SubProxy>
        <Proxy name="UpdateSuppressorLOD"
          proxygroup="filters" proxyname="UpdateSuppressor2">
        </Proxy>
        <ShareProperties subproxy="UpdateSuppressor" >
          <Exception name="Input" />
          <Exception name="ForceUpdate" />
        </ShareProperties>
      </SubProxy>

     <SubProxy>
        <Proxy name="PostCollectUpdateSuppressor" proxygroup="filters"
          proxyname="UpdateSuppressor2">
        </Proxy>
        <ShareProperties subproxy="UpdateSuppressor" >
          <Exception name="Input" />
          <Exception name="ForceUpdate" />
        </ShareProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="Collect" proxygroup="filters" proxyname="MPIMoveData">
        </Proxy>
      </SubProxy>

      <SubProxy>
        <Proxy name="PostCollectUpdateSuppressorLOD" proxygroup="filters"
          proxyname="UpdateSuppressor2">
        </Proxy>
        <ShareProperties subproxy="UpdateSuppressorLOD" >
          <Exception name="Input" />
          <Exception name="ForceUpdate" />
        </ShareProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="CollectLOD" proxygroup="filters" proxyname="MPIMoveData">
        </Proxy>
      </SubProxy>

      <!-- End of UniformGridParallelStrategy -->
    </UniformGridParallelStrategy>

    <ImageDataParallelStrategy name="ImageDataParallelStrategy">
      <Documentation>
        Representation strategy that can be used for image data. This strategy
        delivers the image data to the rendering process, hence not suitable for
        using when doing volume rendering.
      </Documentation>

      <InputProperty
        name="Input"
        command="not-used">
        <Documentation>
          The input to the strategy.
        </Documentation>
        <DataTypeDomain name="input_type">
          <DataType value="vtkImageData" />
        </DataTypeDomain>
      </InputProperty>

      <SubProxy>
        <Proxy name="CacheKeeper"
          proxygroup="filters" proxyname="CacheKeeper" />
      </SubProxy>

      <SubProxy>
        <Proxy name="UpdateSuppressor"
          proxygroup="filters" proxyname="UpdateSuppressor2">
        </Proxy>
        <ExposedProperties>
          <Property name="UpdateTime" />
        </ExposedProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="PostCollectUpdateSuppressor" proxygroup="filters"
          proxyname="UpdateSuppressor2">
        </Proxy>
        <ShareProperties subproxy="UpdateSuppressor" >
          <Exception name="Input" />
          <Exception name="ForceUpdate" />
        </ShareProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="Collect" proxygroup="filters" proxyname="MPIMoveData">
        </Proxy>
      </SubProxy>

      <SubProxy>
        <Proxy name="LODDecimator"
          proxygroup="filters" proxyname="OutlineFilter">
        </Proxy>
      </SubProxy>

      <SubProxy>
        <Proxy name="UpdateSuppressorLOD"
          proxygroup="filters" proxyname="UpdateSuppressor2">
        </Proxy>
        <ShareProperties subproxy="UpdateSuppressor" >
          <Exception name="Input" />
          <Exception name="ForceUpdate" />
        </ShareProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="PostCollectUpdateSuppressorLOD" proxygroup="filters"
          proxyname="UpdateSuppressor2">
        </Proxy>
        <ShareProperties subproxy="UpdateSuppressorLOD" >
          <Exception name="Input" />
          <Exception name="ForceUpdate" />
        </ShareProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="CollectLOD" proxygroup="filters" proxyname="MPIMoveData">
        </Proxy>
      </SubProxy>

      <!-- End of ImageDataParallelStrategy -->
    </ImageDataParallelStrategy>

    <BlockDeliveryStrategy name="BlockDeliveryStrategy"
      base_proxygroup="strategies"
      base_proxyname="PolyDataStrategy">
      <Documentation>
        Strategy used by BlockDeliveryStrategy for updating the pipeline.
      </Documentation>
      <!-- End of BlockDeliveryStrategy -->
    </BlockDeliveryStrategy>

    <!-- End of strategies -->
  </ProxyGroup>

  <ProxyGroup name="views">
    <Proxy name="ComparativeViewBase"
      base_proxygroup="views" base_proxyname="ViewBase">
      <Documentation>
        Base interface for the ComparativeView. It has all the properties except
        the RootView subproxy.
      </Documentation>

      <IntVectorProperty
        name="Dimensions"
        command="Build"
        update_self="1"
        immediate_update="1"
        number_of_elements="2"
        default_values="2 2">
        <IntRangeDomain name="range" min="1 1" max="10 10" />
      </IntVectorProperty>

      <IntVectorProperty
        name="OverlayAllComparisons"
        command="SetOverlayAllComparisons"
        update_self="1"
        number_of_elements="1"
        default_values="0">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty
        name="Spacing"
        command="SetSpacing"
        update_self="1"
        number_of_elements="2"
        default_values="1 1">
        <IntRangeDomain name="range" min="0 0" max="10 10" />
      </IntVectorProperty>

      <IntVectorProperty
        name="ViewSize"
        command="SetViewSize"
        number_of_elements="2"
        update_self="1"
        default_values="400 400">
        <IntRangeDomain name="range" min="1 1" />
        <Documentation>
          Set the view size for this view module.
        </Documentation>
      </IntVectorProperty>

      <ProxyProperty name="Cues"
        command="AddCue"
        remove_command="RemoveCue"
        update_self="1">
        <Documentation>
          Animation cues for changing parameters.
        </Documentation>
      </ProxyProperty>

      <!-- End of ComparativeViewBase -->
    </Proxy>

    <ComparativeViewProxy name="ComparativeRenderView"
      base_proxygroup="views" base_proxyname="ComparativeViewBase">
      <Documentation>
        The is comparative view comprising of individual "RenderView" proxies
        for each panel in the comparative view grid.
      </Documentation>

      <SubProxy>
        <Proxy name="RootView" proxygroup="views" proxyname="RenderView">
        </Proxy>
        <ExposedProperties>
          <Property name="LODThreshold" />
          <Property name="LODResolution" />
          <Property name="UseTriangleStrips" />
          <Property name="UseImmediateMode" />
          <Property name="RenderInterruptsEnabled" />
          <Property name="ResetCamera" />
          <Property name="UseLight" />
          <!-- Light -->
          <Property name="LightAmbientColor" />
          <Property name="LightDiffuseColor" />
          <Property name="LightSpecularColor" />
          <Property name="LightIntensity" />
          <Property name="LightSwitch" />
          <!-- LightKit -->
          <Property name="KeyLightWarmth" />
          <Property name="KeyLightIntensity" />
          <Property name="KeyLightElevation" />
          <Property name="KeyLightAzimuth" />
          <Property name="FillLightWarmth" />
          <Property name="FillLightK:F Ratio" />
          <Property name="FillLightElevation" />
          <Property name="FillLightAzimuth" />
          <Property name="BackLightWarmth" />
          <Property name="BackLightK:B Ratio" />
          <Property name="BackLightElevation" />
          <Property name="BackLightAzimuth" />
          <Property name="HeadLightWarmth" />
          <Property name="HeadLightK:H Ratio" />
          <Property name="MaintainLuminance" />
          <!-- ActiveCamera -->
          <Property name="CameraPositionInfo" />
          <Property name="CameraPosition" />
          <Property name="CameraFocalPointInfo" />
          <Property name="CameraFocalPoint" />
          <Property name="CameraViewUpInfo" />
          <Property name="CameraViewUp" />
          <Property name="CameraViewAngle" />
          <Property name="CameraClippingRangeInfo" />
          <Property name="CameraClippingRange" />
          <Property name="CameraParallelScale" />
          <Property name="CameraParallelScaleInfo" />
          <Property name="CameraParallelProjection" />
          <Property name="EyeAngle" />
          <!-- Interactor -->
          <Property name="CameraManipulators" />
          <Property name="CenterOfRotation" />
          <!-- Annotations -->
          <Property name="CenterAxesVisibility" />
          <Property name="OrientationAxesInteractivity" />
          <Property name="OrientationAxesVisibility" />
          <Property name="OrientationAxesLabelColor" />
          <Property name="OrientationAxesOutlineColor" />
          <!-- Renderer -->
          <Property name="Background" />
          <Property name="Background2" />
          <Property name="BackgroundTexture" />
          <Property name="UseGradientBackground" />
          <Property name="UseTexturedBackground" />
          <Property name="StereoRender" />
          <Property name="StereoType" />
          <!-- RenderWindow -->
        </ExposedProperties>
        <!-- End of "RootView" subproxy -->
      </SubProxy>

      <!-- End of ComparativeRenderView -->
    </ComparativeViewProxy>

    <ComparativeViewProxy name="ComparativeXYChartView"
      base_proxygroup="views" base_proxyname="ComparativeViewBase">
      <Documentation>
        The is comparative view comprising of individual "XYChartView" proxies
        for each panel in the comparative view grid.
      </Documentation>

      <SubProxy>
        <Proxy name="RootView" proxygroup="views" proxyname="XYChartView">
        </Proxy>
        <ExposedProperties>
          <Property name="ChartTitle"/>
          <Property name="ChartTitleFont" />
          <Property name="ChartTitleColor" />
          <Property name="ChartTitleAlignment" />
          <Property name="ShowLegend" />
          <Property name="ShowAxis" />
          <Property name="AxisLogScale" />
          <Property name="ShowAxisGrid" />
          <Property name="AxisColor" />
          <Property name="AxisGridColor" />
          <Property name="ShowAxisLabels" />
          <Property name="AxisLabelFont" />
          <Property name="AxisLabelColor" />
          <Property name="AxisLabelNotation" />
          <Property name="AxisLabelPrecision" />
          <Property name="AxisBehavior" />
          <Property name="AxisRange" />
          <Property name="AxisTitle" />
          <Property name="AxisTitleFont" />
          <Property name="AxisTitleColor" />
        </ExposedProperties>
        <!-- End of "RootView" subproxy -->
      </SubProxy>

      <!-- End of ComparativeXYChartView -->
    </ComparativeViewProxy>

    <ComparativeViewProxy name="ComparativeXYBarChartView"
      base_proxygroup="views" base_proxyname="ComparativeViewBase">
      <Documentation>
        The is comparative view comprising of individual "XYBarChartView" proxies
        for each panel in the comparative view grid.
      </Documentation>

      <SubProxy>
        <Proxy name="RootView" proxygroup="views" proxyname="XYBarChartView">
        </Proxy>
        <ExposedProperties>
          <Property name="ChartTitle"/>
          <Property name="ChartTitleFont" />
          <Property name="ChartTitleColor" />
          <Property name="ChartTitleAlignment" />
          <Property name="ShowLegend" />
          <Property name="ShowAxis" />
          <Property name="AxisLogScale" />
          <Property name="ShowAxisGrid" />
          <Property name="AxisColor" />
          <Property name="AxisGridColor" />
          <Property name="ShowAxisLabels" />
          <Property name="AxisLabelFont" />
          <Property name="AxisLabelColor" />
          <Property name="AxisLabelNotation" />
          <Property name="AxisLabelPrecision" />
          <Property name="AxisBehavior" />
          <Property name="AxisRange" />
          <Property name="AxisTitle" />
          <Property name="AxisTitleFont" />
          <Property name="AxisTitleColor" />
        </ExposedProperties>
        <!-- End of "RootView" subproxy -->
      </SubProxy>

      <!-- End of ComparativeXYBarChartView -->
    </ComparativeViewProxy>

    <TwoDRenderViewProxy name="2DRenderViewBase"
      base_proxygroup="views" base_proxyname="ViewBase">
      <Documentation>
        Defines base API for 2DRenderView and subtypes. Don't use directly.
      </Documentation>

      <SubProxy>
        <!-- SubProxy used to axes annotation -->
        <Proxy name="LegendScaleActor"
          proxygroup="props" proxyname="LegendScaleActor" />
          <ExposedProperties>
            <Property name="Visibility" exposed_name="AxesVisibility" />
          </ExposedProperties>
      </SubProxy>

      <!-- 2DRenderViewBase -->
    </TwoDRenderViewProxy>

    <TwoDRenderViewProxy name="2DRenderView"
      base_proxygroup="views" base_proxyname="2DRenderViewBase">
      <Documentation>
        Simplest 2D render view without compositing/client-server support.
        Currently this view can only show image slices.
      </Documentation>

      <SubProxy>
        <Proxy name="RenderView"
          proxygroup="views" proxyname="RenderView" >
        </Proxy>
        <ExposedProperties>
          <Property name="LODThreshold" />
          <Property name="LODResolution" />
          <Property name="UseTriangleStrips" />
          <Property name="UseImmediateMode" />
          <Property name="RenderInterruptsEnabled" />
          <Property name="ResetCamera" />
          <Property name="UseLight" />
          <!-- Light -->
          <Property name="LightAmbientColor" />
          <Property name="LightDiffuseColor" />
          <Property name="LightSpecularColor" />
          <Property name="LightIntensity" />
          <Property name="LightSwitch" />
          <!-- LightKit -->
          <Property name="KeyLightWarmth" />
          <Property name="KeyLightIntensity" />
          <Property name="KeyLightElevation" />
          <Property name="KeyLightAzimuth" />
          <Property name="FillLightWarmth" />
          <Property name="FillLightK:F Ratio" />
          <Property name="FillLightElevation" />
          <Property name="FillLightAzimuth" />
          <Property name="BackLightWarmth" />
          <Property name="BackLightK:B Ratio" />
          <Property name="BackLightElevation" />
          <Property name="BackLightAzimuth" />
          <Property name="HeadLightWarmth" />
          <Property name="HeadLightK:H Ratio" />
          <Property name="MaintainLuminance" />
          <!-- ActiveCamera -->
          <Property name="CameraPositionInfo" />
          <Property name="CameraPosition" />
          <Property name="CameraFocalPointInfo" />
          <Property name="CameraFocalPoint" />
          <Property name="CameraViewUpInfo" />
          <Property name="CameraViewUp" />
          <Property name="CameraViewAngle" />
          <Property name="CameraClippingRangeInfo" />
          <Property name="CameraClippingRange" />
          <Property name="CameraParallelScale" />
          <Property name="CameraParallelScaleInfo" />
          <!-- Hide CameraParallelProjection, since CameraParallelProjection is
            always true in this view.
          <Property name="CameraParallelProjection" />
          -->
          <Property name="EyeAngle" />
          <!-- Interactor -->
          <Property name="CameraManipulators" />
          <Property name="CenterOfRotation" />
          <!-- Renderer -->
          <Property name="Background" />
          <Property name="Background2" />
          <Property name="BackgroundTexture" />
          <Property name="UseGradientBackground" />
          <Property name="UseTexturedBackground" />
          <!-- RenderWindow -->
        </ExposedProperties>
      </SubProxy>
      <!-- End of 2DRenderView -->
    </TwoDRenderViewProxy>

    <ScatterPlotViewProxy name="ScatterPlotRenderViewBase"
                          base_proxygroup="views" base_proxyname="ViewBase">
      <Documentation>
        Defines base API for ScatterPlotView and subtypes. Don't use directly.
      </Documentation>
      <!-- End of ScatterPlotView -->
    </ScatterPlotViewProxy>

    <ScatterPlotViewProxy name="ScatterPlotRenderView"
      base_proxygroup="views" base_proxyname="ScatterPlotRenderViewBase">
      <Documentation>
        Simplest ScatterPlot render view without compositing/client-server support.
        Currently this view can only show image slices.
      </Documentation>

      <SubProxy>
        <Proxy name="RenderView"
          proxygroup="views" proxyname="RenderView" >
        </Proxy>
        <ExposedProperties>
          <Property name="LODThreshold" />
          <Property name="LODResolution" />
          <Property name="UseTriangleStrips" />
          <Property name="UseImmediateMode" />
          <Property name="RenderInterruptsEnabled" />
          <Property name="ResetCamera" />
          <Property name="UseLight" />
          <!-- Light -->
          <Property name="LightAmbientColor" />
          <Property name="LightDiffuseColor" />
          <Property name="LightSpecularColor" />
          <Property name="LightIntensity" />
          <Property name="LightSwitch" />
          <!-- LightKit -->
          <Property name="KeyLightWarmth" />
          <Property name="KeyLightIntensity" />
          <Property name="KeyLightElevation" />
          <Property name="KeyLightAzimuth" />
          <Property name="FillLightWarmth" />
          <Property name="FillLightK:F Ratio" />
          <Property name="FillLightElevation" />
          <Property name="FillLightAzimuth" />
          <Property name="BackLightWarmth" />
          <Property name="BackLightK:B Ratio" />
          <Property name="BackLightElevation" />
          <Property name="BackLightAzimuth" />
          <Property name="HeadLightWarmth" />
          <Property name="HeadLightK:H Ratio" />
          <Property name="MaintainLuminance" />
          <!-- ActiveCamera -->
          <Property name="CameraPositionInfo" />
          <Property name="CameraPosition" />
          <Property name="CameraFocalPointInfo" />
          <Property name="CameraFocalPoint" />
          <Property name="CameraViewUpInfo" />
          <Property name="CameraViewUp" />
          <Property name="CameraViewAngle" />
          <Property name="CameraClippingRangeInfo" />
          <Property name="CameraClippingRange" />
          <Property name="CameraParallelScale" />
          <Property name="CameraParallelScaleInfo" />
          <Property name="CameraParallelProjection" />
          <Property name="EyeAngle" />
          <!-- Interactor -->
          <Property name="CameraManipulators" />
          <Property name="CenterOfRotation" />
          <!-- Renderer -->
          <Property name="Background" />
          <Property name="Background2" />
          <Property name="BackgroundTexture" />
          <Property name="UseGradientBackground" />
          <Property name="UseTexturedBackground" />
          <!-- RenderWindow -->
        </ExposedProperties>
      </SubProxy>
      <!-- End of ScatterPlotRenderView -->
    </ScatterPlotViewProxy>

    <CaveRenderViewProxy name="CaveRenderView"
          base_proxygroup="views" base_proxyname="IceTMultiDisplayRenderView">
      <Documentation>
        Cave Render View for tile displays.
      </Documentation>
      <!-- change the ParallelRenderManager from IceTRenderManager to CaveRenderManager -->
      <SubProxy>
        <Proxy  name="ParallelRenderManager"
                proxygroup="composite_managers"
                proxyname="CaveRenderManager"
                override="1">
        </Proxy>
      </SubProxy>

      <!-- End of CaveRenderView -->
    </CaveRenderViewProxy>
    <!-- End of group "views" -->
  </ProxyGroup>

  <ProxyGroup name="representations">

    <AxesRepresentationProxy name="FrustumWidget" class="vtkOutlineSource" >
      <IntVectorProperty name="BoxType"
        command="SetBoxType"
        number_of_elements="1"
        default_values="1">
      </IntVectorProperty>

      <DoubleVectorProperty
         name="Corners"
         command="SetCorners"
         number_of_elements="24"
         argument_is_array="1"
         default_values="0 0 0 1 0 0 0 1 0 1 1 0 0 0 1 1 0 1 0 1 1 1 1 1" >
         <Documentation>
          Specify the corners of the outline when in Oriented mode, the values
          are supplied as 8*3 double values.
         </Documentation>
      </DoubleVectorProperty>

      <SubProxy>
        <Proxy name="Mapper" proxygroup="mappers" proxyname="PolyDataMapper">
        </Proxy>
      </SubProxy>

      <SubProxy>
        <Proxy name="Prop" proxygroup="props" proxyname="Actor">
        </Proxy>
        <ExposedProperties>
          <Property name="Visibility" />
          <Property name="Position" />
          <Property name="Scale" />
          <Property name="Origin" />
          <Property name="Pickable" />
        </ExposedProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="Property" proxygroup="properties" proxyname="Property2" />
        <ExposedProperties>
          <Property name="Color" />
          <Property name="LineWidth" />
          <Property name="PointSize" />
          <Property name="Representation" />
        </ExposedProperties>
      </SubProxy>

      <!-- End of FrustumWidget -->
    </AxesRepresentationProxy>

    <ScatterPlotRepresentationProxy name="ScatterPlotRepresentation">
      <Documentation>
        Representation to scatter plots. The plot can be in 2D or 3D.
      </Documentation>

      <InputProperty name="Input"
        command="not-used"
        port_index="0">
        <Documentation>
          Set the input to the representation. Can be any vtkDataObject producer.
        </Documentation>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet" />
          <DataType value="vtkGraph" />
        </DataTypeDomain>
      </InputProperty>

      <InputProperty name="GlyphInput"
        command="not-used"
        port_index="1">
        <Documentation>
          Set the input to the representation. Can be any vtkPointSet producer.
        </Documentation>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData" />
        </DataTypeDomain>
      </InputProperty>


      <DoubleVectorProperty name="UpdateTime"
        command="SetUpdateTime"
        update_self="1"
        is_internal="1"
        immediate_update="1"
        number_of_elements="1"
        default_values="none">
        <DoubleRangeDomain name="range" />
        <Documentation>
          This time is not used unless UseViewUpdateTime is off.
        </Documentation>
      </DoubleVectorProperty>

      <SubProxy>
        <!--
          Geometry filter is used to conver non-polydata input to polydata.
          -->
        <Proxy name="FlattenFilter"
          proxygroup="filters" proxyname="FlattenFilter" />
      </SubProxy>

      <StringVectorProperty name="SeriesNamesInfo"
        number_of_elements_per_command="1"
        element_types="2"
        update_self="1"
        information_only="1">
        <Documentation>
          Property providing list of available series that can be plotted.
        </Documentation>
        <ScatterPlotArraysInformationHelper />
      </StringVectorProperty>

      <StringVectorProperty name="XArrayName"
        command="SetXAxisArrayName"
        update_self="1"
        number_of_elements="1"
        default_values="coord,Points,0">
        <Documentation>
          Set the array to use on X axis.
        </Documentation>
        <StringListDomain name="array_list" >
          <RequiredProperties>
             <Property name="SeriesNamesInfo" function="ArrayList"/>
          </RequiredProperties>
        </StringListDomain>
      </StringVectorProperty>


      <StringVectorProperty name="YArrayName"
        command="SetYAxisArrayName"
        update_self="1"
        number_of_elements="1"
        default_values="coord,Points,1">
        <Documentation>
          Set the array to use on Y axis.
        </Documentation>
        <StringListDomain name="array_list" >
          <RequiredProperties>
             <Property name="SeriesNamesInfo" function="ArrayList"/>
          </RequiredProperties>
        </StringListDomain>
      </StringVectorProperty>


      <StringVectorProperty name="ZArrayName"
        command="SetZAxisArrayName"
        update_self="1"
        number_of_elements="1"
        default_values="coord,Points,2">
        <Documentation>
          Set the array to use on Z axis.
        </Documentation>
        <StringListDomain name="array_list" >
          <RequiredProperties>
             <Property name="SeriesNamesInfo" function="ArrayList"/>
          </RequiredProperties>
        </StringListDomain>
      </StringVectorProperty>


      <StringVectorProperty name="ColorArrayName"
        command="SetColorArrayName"
        update_self="1"
        number_of_elements="1"
        default_values="">
        <Documentation>
          Set the array to use for color.
        </Documentation>
        <StringListDomain name="array_list" >
          <RequiredProperties>
             <Property name="SeriesNamesInfo" function="ArrayList"/>
          </RequiredProperties>
        </StringListDomain>
      </StringVectorProperty>

      <StringVectorProperty name="GlyphScalingArrayName"
        command="SetGlyphScalingArrayName"
        update_self="1"
        number_of_elements="1"
        default_values="">
        <Documentation>
          Set the array to use for scaling the glyphs.
        </Documentation>
        <StringListDomain name="array_list" >
          <RequiredProperties>
             <Property name="SeriesNamesInfo" function="ArrayList"/>
          </RequiredProperties>
        </StringListDomain>
      </StringVectorProperty>

      <StringVectorProperty name="GlyphMultiSourceArrayName"
        command="SetGlyphMultiSourceArrayName"
        update_self="1"
        number_of_elements="1"
        default_values="">
        <Documentation>
          Set the array to use for choosing the right glyph to display.
        </Documentation>
        <StringListDomain name="array_list" >
          <RequiredProperties>
             <Property name="SeriesNamesInfo" function="ArrayList"/>
          </RequiredProperties>
        </StringListDomain>
      </StringVectorProperty>

      <StringVectorProperty name="GlyphOrientationArrayName"
        command="SetGlyphOrientationArrayName"
        update_self="1"
        number_of_elements="1"
        default_values="">
        <Documentation>
          Set the array to use for orienting the glyphs.
        </Documentation>
        <StringListDomain name="array_list" >
          <RequiredProperties>
             <Property name="SeriesNamesInfo" function="ArrayList"/>
          </RequiredProperties>
        </StringListDomain>
      </StringVectorProperty>


      <IntVectorProperty
        name="Visibility"
        command="SetVisibility"
        number_of_elements="1"
        default_values="1"
        update_self="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Set the visibility for this representation.
        </Documentation>
      </IntVectorProperty>


      <IntVectorProperty name="CubeAxesVisibility"
        command="SetCubeAxesVisibility"
        number_of_elements="1"
        update_self="1"
        default_values="0" >
        <BooleanDomain name="bool" />
        <Documentation>
          Set the visibility for the cube axes.
        </Documentation>
      </IntVectorProperty>

      <StringVectorProperty name="ColorArrayName"
        command="SetColorArrayName"
        number_of_elements="1"
        default_values=""
        update_self="1">
        <Documentation>
          Set the array name to color by.
          If no array name is set, or choosen array is not available, then the
          image scalars are used by default.
        </Documentation>
        <ArrayListDomain name="array_list" attribute_type="Scalars"
          input_domain_name="input_array_any">
          <RequiredProperties>
            <Property name="Input" function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>

      <SubProxy>
        <!-- Mapper for high-res image -->
        <Proxy name="Mapper"
          proxygroup="mappers" proxyname="ScatterPlotMapper" />

        <ExposedProperties>

          <Property name="LookupTable" />
          <Property name="MapScalars" />

          <Property name="ImmediateModeRendering" />
          <Property name="StaticMode" />
          <Property name="ThreeDMode" />
          <Property name="Colorize" />
          <Property name="GlyphMode" />
          <Property name="ScaleFactor" />
          <Property name="OrientationMode" />
          <Property name="ParallelToCamera" />
          <Property name="GlyphXOrientationArray" />
          <Property name="GlyphYOrientationArray" />
          <Property name="GlyphZOrientationArray" />
        </ExposedProperties>

      </SubProxy>

      <!-- Mapper for low-res image
      <SubProxy>

        <Proxy name="LODMapper"
          proxygroup="mappers" proxyname="PolyDataMapper" />
        <ShareProperties subproxy="Mapper" >
          <Exception name="Input" />
        </ShareProperties>
      </SubProxy>
      -->
      <SubProxy>
        <!-- Prop3D that gets added to the 3D renderer -->
        <Proxy name="Prop3D" proxygroup="props" proxyname="Actor" />
        <ExposedProperties>
          <Property name="Orientation" />
          <Property name="Origin" />
          <Property name="Pickable" />
          <Property name="Position" />
          <Property name="Scale" />
          <Property name="Texture" />
          <Property name="Visibility" />
        </ExposedProperties>
      </SubProxy>

      <SubProxy>
        <!-- Property for the vtkProp.  -->
        <Proxy name="Property" proxygroup="properties" proxyname="Property" />
        <ExposedProperties>
          <Property name="Opacity" />
          <Property name="Shading" />

          <Property name="PointSize" />
          <Property name="LineWidth" />
          <!--
          <Property name="SpecularColor" />
          <Property name="SpecularPower" />
          <Property name="Interpolation" />
          <Property name="AmbientColor" />
          <Property name="DiffuseColor" />
          <Property name="EdgeColor" />
          -->
        </ExposedProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="CubeAxesActor"
          proxygroup="props" proxyname="CubeAxesActor">
        </Proxy>
        <ExposedProperties>
<!--          <Property exposed_name="CubeAxesColor" name="Color" /> -->
          <Property exposed_name="CubeBounds" name="Bounds" />
          <Property exposed_name="CubeAxesCornerOffset" name="CornerOffset" />
          <Property exposed_name="CubeAxesFlyMode" name="FlyMode" />
          <Property exposed_name="CubeAxesInertia" name="Inertia" />
          <Property exposed_name="CubeAxesTickLocation" name="TickLocation" />
          <Property exposed_name="CubeAxesXAxisMinorTickVisibility" name="XAxisMinorTickVisibility" />
          <Property exposed_name="CubeAxesXAxisTickVisibility" name="XAxisTickVisibility" />
          <Property exposed_name="CubeAxesXAxisVisibility" name="XAxisVisibility" />
          <Property exposed_name="CubeAxesXGridLines" name="XGridLines" />
          <Property exposed_name="CubeAxesXTitle" name="XTitle" />
          <Property exposed_name="CubeAxesYAxisMinorTickVisibility" name="YAxisMinorTickVisibility" />
          <Property exposed_name="CubeAxesYAxisTickVisibility" name="YAxisTickVisibility" />
          <Property exposed_name="CubeAxesYAxisVisibility" name="YAxisVisibility" />
          <Property exposed_name="CubeAxesYGridLines" name="YGridLines" />
          <Property exposed_name="CubeAxesYTitle" name="YTitle" />
          <Property exposed_name="CubeAxesZAxisMinorTickVisibility" name="ZAxisMinorTickVisibility" />
          <Property exposed_name="CubeAxesZAxisTickVisibility" name="ZAxisTickVisibility" />
          <Property exposed_name="CubeAxesZAxisVisibility" name="ZAxisVisibility" />
          <Property exposed_name="CubeAxesZGridLines" name="ZGridLines" />
          <Property exposed_name="CubeAxesZTitle" name="ZTitle" />
        </ExposedProperties>
      </SubProxy>
      <SubProxy>
        <Proxy name="CubeAxesProperty"
               proxygroup="properties" proxyname="Property2" />
        <ExposedProperties>
          <Property exposed_name="CubeAxesColor" name="Color" />
        </ExposedProperties>
      </SubProxy>
      <!-- End of ScatterPlotRepresentation -->
    </ScatterPlotRepresentationProxy>

    <Glyph3DMapperRepresentationProxy name="Glyph3DRepresentation"
      base_proxygroup="representations" base_proxyname="SurfaceRepresentation">
      <Documentation>
        Representation that uses vtkGlyph3DMapper for glyphing.
      </Documentation>

      <InputProperty name="Source" 
        command="not-used" 
        port_index="1"
        multiple_input="1"
        label="Glyph Type" >
        <Documentation>
          Specify the source objects.
        </Documentation>
        <!-- 
          We don't directly connect to the mapper, since the data produced by
          the source needs to be delivered to the rendering nodes.
        -->
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData" />
        </DataTypeDomain>
        <ProxyListDomain name="proxy_list">
          <Proxy group="sources" name="ArrowSource" />
          <Proxy group="sources" name="ConeSource" />
          <Proxy group="sources" name="CubeSource" />
          <Proxy group="sources" name="CylinderSource" />
          <Proxy group="sources" name="LineSource" />
          <Proxy group="sources" name="SphereSource" />
          <Proxy group="sources" name="GlyphSource2D" />
        </ProxyListDomain>
      </InputProperty>

      <SubProxy>
        <Proxy name="DefaultGlyphSource" proxygroup="sources"
               proxyname="ArrowSource" />
      </SubProxy>

      <SubProxy>
        <!-- 
          GlyphMapper for high-res geometry.
        -->
        <Proxy name="GlyphMapper" proxygroup="mappers" proxyname="Glyph3DMapper" />
        <ExposedProperties>
          <Property name="SelectMaskArray" />
          <Property name="SelectScaleArray" />
          <Property name="SelectOrientationVectors" />
          <Property name="Scaling" />
          <Property name="ScaleMode" />
          <Property name="ScaleFactor" />
          <Property name="Orient" />
          <Property name="OrientationMode" />
          <Property name="Masking" />
        </ExposedProperties>
        <ShareProperties subproxy="Mapper">
        </ShareProperties>
      </SubProxy>

      <SubProxy>
        <!-- 
          GlyphMapper for low-res geometry.
        -->
        <Proxy name="LODGlyphMapper" proxygroup="mappers" proxyname="Glyph3DMapper" />
        <ShareProperties subproxy="GlyphMapper">
        </ShareProperties>
      </SubProxy>

      
    </Glyph3DMapperRepresentationProxy>
  </ProxyGroup>

  <ProxyGroup name="options">
  <!-- =================================================================== -->
    <ContextNamedOptionsProxy name="PlotOptionsBase" class="vtkContextNamedOptions"
      processes="client|dataserver" >
      <StringVectorProperty name="VisibilityInfo"
        number_of_elements_per_command="2"
        repeat_command="1"
        information_only="1">
        <Documentation>
          Property which has the current state of visibility for the series
          available currently.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="Visibility"
        command="SetVisibility"
        number_of_elements_per_command="2"
        element_types="2 0"
        repeat_command="1"
        information_property="VisibilityInfo" >
        <Documentation>
          Set the series visibility.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="LineThicknessInfo"
        number_of_elements_per_command="2"
        repeat_command="1"
        information_only="1">
        <Documentation>
          Property which has the current state of line thickness for the series
          available currently.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="LineThickness"
        command="SetLineThickness"
        number_of_elements_per_command="2"
        element_types="2 0"
        repeat_command="1"
        information_property="LineThicknessInfo" >
        <Documentation>
          Set the series line thickness.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="LineStyleInfo"
        number_of_elements_per_command="2"
        repeat_command="1"
        information_only="1">
        <Documentation>
          Property which has the current state of line style for the series
          available currently.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="LineStyle"
        command="SetLineStyle"
        number_of_elements_per_command="2"
        element_types="2 0"
        repeat_command="1"
        information_property="LineStyleInfo">
        <Documentation>
          Set the series line style.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="LabelInfo"
        number_of_elements_per_command="2"
        repeat_command="1"
        information_only="1">
        <Documentation>
          Property which has the current state of labels for the series
          available currently.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="Label"
        command="SetLabel"
        number_of_elements_per_command="2"
        element_types="2 2"
        repeat_command="1"
        information_property="LabelInfo">
        <Documentation>
          Set the series labels.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="ColorInfo"
        number_of_elements_per_command="4"
        repeat_command="1"
        information_only="1">
        <Documentation>
          Property which has the current state of line color for the series.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="Color"
        command="SetColor"
        number_of_elements_per_command="4"
        element_types="2 1 1 1"
        repeat_command="1"
        information_property="ColorInfo" >
        <Documentation>
          Set the series line color.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="MarkerStyleInfo"
        number_of_elements_per_command="2"
        repeat_command="1"
        information_only="1">
        <Documentation>
          Property which has the current state of marker style for the series
          available currently.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="MarkerStyle"
        command="SetMarkerStyle"
        number_of_elements_per_command="2"
        element_types="2 0"
        repeat_command="1"
        information_property="MarkerStyleInfo">
        <Documentation>
          Set the series marker style.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="PlotCornerInfo"
        number_of_elements_per_command="2"
        repeat_command="1"
        information_only="1">
        <Documentation>
          Property which has the current state of marker style for the series
          available currently.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="PlotCorner"
        command="SetAxisCorner"
        number_of_elements_per_command="2"
        element_types="2 0"
        repeat_command="1"
        information_property="PlotCornerInfo">
        <Documentation>
          Set the series axis corner.
        </Documentation>
      </StringVectorProperty>
      <!-- End of PlotOptionsBase -->
    </ContextNamedOptionsProxy>
  </ProxyGroup>

</ServerManagerConfiguration>
